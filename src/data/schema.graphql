schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""
columns and relationships of "category"
"""
type category {
  _id: Int!
  description: String
  image: String

  """An array relationship"""
  learning_units(
    """distinct select on columns"""
    distinct_on: [learning_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unit_order_by!]

    """filter the rows returned"""
    where: learning_unit_bool_exp
  ): [learning_unit!]!

  """An aggregated array relationship"""
  learning_units_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unit_order_by!]

    """filter the rows returned"""
    where: learning_unit_bool_exp
  ): learning_unit_aggregate!
  name: String!
  parent_category_id: Int

  """An array relationship"""
  student_assessment_interests(
    """distinct select on columns"""
    distinct_on: [student_assessment_interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_interest_order_by!]

    """filter the rows returned"""
    where: student_assessment_interest_bool_exp
  ): [student_assessment_interest!]!

  """An aggregated array relationship"""
  student_assessment_interests_aggregate(
    """distinct select on columns"""
    distinct_on: [student_assessment_interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_interest_order_by!]

    """filter the rows returned"""
    where: student_assessment_interest_bool_exp
  ): student_assessment_interest_aggregate!
}

"""
aggregated selection of "category"
"""
type category_aggregate {
  aggregate: category_aggregate_fields
  nodes: [category!]!
}

"""
aggregate fields of "category"
"""
type category_aggregate_fields {
  avg: category_avg_fields
  count(columns: [category_select_column!], distinct: Boolean): Int
  max: category_max_fields
  min: category_min_fields
  stddev: category_stddev_fields
  stddev_pop: category_stddev_pop_fields
  stddev_samp: category_stddev_samp_fields
  sum: category_sum_fields
  var_pop: category_var_pop_fields
  var_samp: category_var_samp_fields
  variance: category_variance_fields
}

"""
order by aggregate values of table "category"
"""
input category_aggregate_order_by {
  avg: category_avg_order_by
  count: order_by
  max: category_max_order_by
  min: category_min_order_by
  stddev: category_stddev_order_by
  stddev_pop: category_stddev_pop_order_by
  stddev_samp: category_stddev_samp_order_by
  sum: category_sum_order_by
  var_pop: category_var_pop_order_by
  var_samp: category_var_samp_order_by
  variance: category_variance_order_by
}

"""
input type for inserting array relation for remote table "category"
"""
input category_arr_rel_insert_input {
  data: [category_insert_input!]!
  on_conflict: category_on_conflict
}

"""aggregate avg on columns"""
type category_avg_fields {
  _id: Float
  parent_category_id: Float
}

"""
order by avg() on columns of table "category"
"""
input category_avg_order_by {
  _id: order_by
  parent_category_id: order_by
}

"""
Boolean expression to filter rows from the table "category". All fields are combined with a logical 'AND'.
"""
input category_bool_exp {
  _and: [category_bool_exp]
  _id: Int_comparison_exp
  _not: category_bool_exp
  _or: [category_bool_exp]
  description: String_comparison_exp
  image: String_comparison_exp
  learning_units: learning_unit_bool_exp
  name: String_comparison_exp
  parent_category_id: Int_comparison_exp
  student_assessment_interests: student_assessment_interest_bool_exp
}

"""
unique or primary key constraints on table "category"
"""
enum category_constraint {
  """unique or primary key constraint"""
  category_pkey
}

"""
input type for incrementing integer column in table "category"
"""
input category_inc_input {
  _id: Int
  parent_category_id: Int
}

"""
input type for inserting data into table "category"
"""
input category_insert_input {
  _id: Int
  description: String
  image: String
  learning_units: learning_unit_arr_rel_insert_input
  name: String
  parent_category_id: Int
  student_assessment_interests: student_assessment_interest_arr_rel_insert_input
}

"""aggregate max on columns"""
type category_max_fields {
  _id: Int
  description: String
  image: String
  name: String
  parent_category_id: Int
}

"""
order by max() on columns of table "category"
"""
input category_max_order_by {
  _id: order_by
  description: order_by
  image: order_by
  name: order_by
  parent_category_id: order_by
}

"""aggregate min on columns"""
type category_min_fields {
  _id: Int
  description: String
  image: String
  name: String
  parent_category_id: Int
}

"""
order by min() on columns of table "category"
"""
input category_min_order_by {
  _id: order_by
  description: order_by
  image: order_by
  name: order_by
  parent_category_id: order_by
}

"""
response of any mutation on the table "category"
"""
type category_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [category!]!
}

"""
input type for inserting object relation for remote table "category"
"""
input category_obj_rel_insert_input {
  data: category_insert_input!
  on_conflict: category_on_conflict
}

"""
on conflict condition type for table "category"
"""
input category_on_conflict {
  constraint: category_constraint!
  update_columns: [category_update_column!]!
  where: category_bool_exp
}

"""
ordering options when selecting data from "category"
"""
input category_order_by {
  _id: order_by
  description: order_by
  image: order_by
  learning_units_aggregate: learning_unit_aggregate_order_by
  name: order_by
  parent_category_id: order_by
  student_assessment_interests_aggregate: student_assessment_interest_aggregate_order_by
}

"""
primary key columns input for table: "category"
"""
input category_pk_columns_input {
  _id: Int!
}

"""
select columns of table "category"
"""
enum category_select_column {
  """column name"""
  _id

  """column name"""
  description

  """column name"""
  image

  """column name"""
  name

  """column name"""
  parent_category_id
}

"""
input type for updating data in table "category"
"""
input category_set_input {
  _id: Int
  description: String
  image: String
  name: String
  parent_category_id: Int
}

"""aggregate stddev on columns"""
type category_stddev_fields {
  _id: Float
  parent_category_id: Float
}

"""
order by stddev() on columns of table "category"
"""
input category_stddev_order_by {
  _id: order_by
  parent_category_id: order_by
}

"""aggregate stddev_pop on columns"""
type category_stddev_pop_fields {
  _id: Float
  parent_category_id: Float
}

"""
order by stddev_pop() on columns of table "category"
"""
input category_stddev_pop_order_by {
  _id: order_by
  parent_category_id: order_by
}

"""aggregate stddev_samp on columns"""
type category_stddev_samp_fields {
  _id: Float
  parent_category_id: Float
}

"""
order by stddev_samp() on columns of table "category"
"""
input category_stddev_samp_order_by {
  _id: order_by
  parent_category_id: order_by
}

"""aggregate sum on columns"""
type category_sum_fields {
  _id: Int
  parent_category_id: Int
}

"""
order by sum() on columns of table "category"
"""
input category_sum_order_by {
  _id: order_by
  parent_category_id: order_by
}

"""
update columns of table "category"
"""
enum category_update_column {
  """column name"""
  _id

  """column name"""
  description

  """column name"""
  image

  """column name"""
  name

  """column name"""
  parent_category_id
}

"""aggregate var_pop on columns"""
type category_var_pop_fields {
  _id: Float
  parent_category_id: Float
}

"""
order by var_pop() on columns of table "category"
"""
input category_var_pop_order_by {
  _id: order_by
  parent_category_id: order_by
}

"""aggregate var_samp on columns"""
type category_var_samp_fields {
  _id: Float
  parent_category_id: Float
}

"""
order by var_samp() on columns of table "category"
"""
input category_var_samp_order_by {
  _id: order_by
  parent_category_id: order_by
}

"""aggregate variance on columns"""
type category_variance_fields {
  _id: Float
  parent_category_id: Float
}

"""
order by variance() on columns of table "category"
"""
input category_variance_order_by {
  _id: order_by
  parent_category_id: order_by
}

"""
columns and relationships of "class"
"""
type class {
  _id: Int!
  description: String!

  """An array relationship"""
  learning_unity_releases(
    """distinct select on columns"""
    distinct_on: [learning_unity_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unity_release_order_by!]

    """filter the rows returned"""
    where: learning_unity_release_bool_exp
  ): [learning_unity_release!]!

  """An aggregated array relationship"""
  learning_unity_releases_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_unity_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unity_release_order_by!]

    """filter the rows returned"""
    where: learning_unity_release_bool_exp
  ): learning_unity_release_aggregate!

  """An array relationship"""
  module_releases(
    """distinct select on columns"""
    distinct_on: [module_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [module_release_order_by!]

    """filter the rows returned"""
    where: module_release_bool_exp
  ): [module_release!]!

  """An aggregated array relationship"""
  module_releases_aggregate(
    """distinct select on columns"""
    distinct_on: [module_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [module_release_order_by!]

    """filter the rows returned"""
    where: module_release_bool_exp
  ): module_release_aggregate!

  """An array relationship"""
  students(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): [student!]!

  """An aggregated array relationship"""
  students_aggregate(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): student_aggregate!
}

"""
aggregated selection of "class"
"""
type class_aggregate {
  aggregate: class_aggregate_fields
  nodes: [class!]!
}

"""
aggregate fields of "class"
"""
type class_aggregate_fields {
  avg: class_avg_fields
  count(columns: [class_select_column!], distinct: Boolean): Int
  max: class_max_fields
  min: class_min_fields
  stddev: class_stddev_fields
  stddev_pop: class_stddev_pop_fields
  stddev_samp: class_stddev_samp_fields
  sum: class_sum_fields
  var_pop: class_var_pop_fields
  var_samp: class_var_samp_fields
  variance: class_variance_fields
}

"""
order by aggregate values of table "class"
"""
input class_aggregate_order_by {
  avg: class_avg_order_by
  count: order_by
  max: class_max_order_by
  min: class_min_order_by
  stddev: class_stddev_order_by
  stddev_pop: class_stddev_pop_order_by
  stddev_samp: class_stddev_samp_order_by
  sum: class_sum_order_by
  var_pop: class_var_pop_order_by
  var_samp: class_var_samp_order_by
  variance: class_variance_order_by
}

"""
input type for inserting array relation for remote table "class"
"""
input class_arr_rel_insert_input {
  data: [class_insert_input!]!
  on_conflict: class_on_conflict
}

"""aggregate avg on columns"""
type class_avg_fields {
  _id: Float
}

"""
order by avg() on columns of table "class"
"""
input class_avg_order_by {
  _id: order_by
}

"""
Boolean expression to filter rows from the table "class". All fields are combined with a logical 'AND'.
"""
input class_bool_exp {
  _and: [class_bool_exp]
  _id: Int_comparison_exp
  _not: class_bool_exp
  _or: [class_bool_exp]
  description: String_comparison_exp
  learning_unity_releases: learning_unity_release_bool_exp
  module_releases: module_release_bool_exp
  students: student_bool_exp
}

"""
unique or primary key constraints on table "class"
"""
enum class_constraint {
  """unique or primary key constraint"""
  class_pkey
}

"""
input type for incrementing integer column in table "class"
"""
input class_inc_input {
  _id: Int
}

"""
input type for inserting data into table "class"
"""
input class_insert_input {
  _id: Int
  description: String
  learning_unity_releases: learning_unity_release_arr_rel_insert_input
  module_releases: module_release_arr_rel_insert_input
  students: student_arr_rel_insert_input
}

"""aggregate max on columns"""
type class_max_fields {
  _id: Int
  description: String
}

"""
order by max() on columns of table "class"
"""
input class_max_order_by {
  _id: order_by
  description: order_by
}

"""aggregate min on columns"""
type class_min_fields {
  _id: Int
  description: String
}

"""
order by min() on columns of table "class"
"""
input class_min_order_by {
  _id: order_by
  description: order_by
}

"""
response of any mutation on the table "class"
"""
type class_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [class!]!
}

"""
input type for inserting object relation for remote table "class"
"""
input class_obj_rel_insert_input {
  data: class_insert_input!
  on_conflict: class_on_conflict
}

"""
on conflict condition type for table "class"
"""
input class_on_conflict {
  constraint: class_constraint!
  update_columns: [class_update_column!]!
  where: class_bool_exp
}

"""
ordering options when selecting data from "class"
"""
input class_order_by {
  _id: order_by
  description: order_by
  learning_unity_releases_aggregate: learning_unity_release_aggregate_order_by
  module_releases_aggregate: module_release_aggregate_order_by
  students_aggregate: student_aggregate_order_by
}

"""
primary key columns input for table: "class"
"""
input class_pk_columns_input {
  _id: Int!
}

"""
select columns of table "class"
"""
enum class_select_column {
  """column name"""
  _id

  """column name"""
  description
}

"""
input type for updating data in table "class"
"""
input class_set_input {
  _id: Int
  description: String
}

"""aggregate stddev on columns"""
type class_stddev_fields {
  _id: Float
}

"""
order by stddev() on columns of table "class"
"""
input class_stddev_order_by {
  _id: order_by
}

"""aggregate stddev_pop on columns"""
type class_stddev_pop_fields {
  _id: Float
}

"""
order by stddev_pop() on columns of table "class"
"""
input class_stddev_pop_order_by {
  _id: order_by
}

"""aggregate stddev_samp on columns"""
type class_stddev_samp_fields {
  _id: Float
}

"""
order by stddev_samp() on columns of table "class"
"""
input class_stddev_samp_order_by {
  _id: order_by
}

"""aggregate sum on columns"""
type class_sum_fields {
  _id: Int
}

"""
order by sum() on columns of table "class"
"""
input class_sum_order_by {
  _id: order_by
}

"""
update columns of table "class"
"""
enum class_update_column {
  """column name"""
  _id

  """column name"""
  description
}

"""aggregate var_pop on columns"""
type class_var_pop_fields {
  _id: Float
}

"""
order by var_pop() on columns of table "class"
"""
input class_var_pop_order_by {
  _id: order_by
}

"""aggregate var_samp on columns"""
type class_var_samp_fields {
  _id: Float
}

"""
order by var_samp() on columns of table "class"
"""
input class_var_samp_order_by {
  _id: order_by
}

"""aggregate variance on columns"""
type class_variance_fields {
  _id: Float
}

"""
order by variance() on columns of table "class"
"""
input class_variance_order_by {
  _id: order_by
}

"""
columns and relationships of "company"
"""
type company {
  _id: Int!
  name: String!

  """An array relationship"""
  students(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): [student!]!

  """An aggregated array relationship"""
  students_aggregate(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): student_aggregate!
}

"""
aggregated selection of "company"
"""
type company_aggregate {
  aggregate: company_aggregate_fields
  nodes: [company!]!
}

"""
aggregate fields of "company"
"""
type company_aggregate_fields {
  avg: company_avg_fields
  count(columns: [company_select_column!], distinct: Boolean): Int
  max: company_max_fields
  min: company_min_fields
  stddev: company_stddev_fields
  stddev_pop: company_stddev_pop_fields
  stddev_samp: company_stddev_samp_fields
  sum: company_sum_fields
  var_pop: company_var_pop_fields
  var_samp: company_var_samp_fields
  variance: company_variance_fields
}

"""
order by aggregate values of table "company"
"""
input company_aggregate_order_by {
  avg: company_avg_order_by
  count: order_by
  max: company_max_order_by
  min: company_min_order_by
  stddev: company_stddev_order_by
  stddev_pop: company_stddev_pop_order_by
  stddev_samp: company_stddev_samp_order_by
  sum: company_sum_order_by
  var_pop: company_var_pop_order_by
  var_samp: company_var_samp_order_by
  variance: company_variance_order_by
}

"""
input type for inserting array relation for remote table "company"
"""
input company_arr_rel_insert_input {
  data: [company_insert_input!]!
  on_conflict: company_on_conflict
}

"""aggregate avg on columns"""
type company_avg_fields {
  _id: Float
}

"""
order by avg() on columns of table "company"
"""
input company_avg_order_by {
  _id: order_by
}

"""
Boolean expression to filter rows from the table "company". All fields are combined with a logical 'AND'.
"""
input company_bool_exp {
  _and: [company_bool_exp]
  _id: Int_comparison_exp
  _not: company_bool_exp
  _or: [company_bool_exp]
  name: String_comparison_exp
  students: student_bool_exp
}

"""
unique or primary key constraints on table "company"
"""
enum company_constraint {
  """unique or primary key constraint"""
  company_pkey
}

"""
input type for incrementing integer column in table "company"
"""
input company_inc_input {
  _id: Int
}

"""
input type for inserting data into table "company"
"""
input company_insert_input {
  _id: Int
  name: String
  students: student_arr_rel_insert_input
}

"""aggregate max on columns"""
type company_max_fields {
  _id: Int
  name: String
}

"""
order by max() on columns of table "company"
"""
input company_max_order_by {
  _id: order_by
  name: order_by
}

"""aggregate min on columns"""
type company_min_fields {
  _id: Int
  name: String
}

"""
order by min() on columns of table "company"
"""
input company_min_order_by {
  _id: order_by
  name: order_by
}

"""
response of any mutation on the table "company"
"""
type company_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [company!]!
}

"""
input type for inserting object relation for remote table "company"
"""
input company_obj_rel_insert_input {
  data: company_insert_input!
  on_conflict: company_on_conflict
}

"""
on conflict condition type for table "company"
"""
input company_on_conflict {
  constraint: company_constraint!
  update_columns: [company_update_column!]!
  where: company_bool_exp
}

"""
ordering options when selecting data from "company"
"""
input company_order_by {
  _id: order_by
  name: order_by
  students_aggregate: student_aggregate_order_by
}

"""
primary key columns input for table: "company"
"""
input company_pk_columns_input {
  _id: Int!
}

"""
select columns of table "company"
"""
enum company_select_column {
  """column name"""
  _id

  """column name"""
  name
}

"""
input type for updating data in table "company"
"""
input company_set_input {
  _id: Int
  name: String
}

"""aggregate stddev on columns"""
type company_stddev_fields {
  _id: Float
}

"""
order by stddev() on columns of table "company"
"""
input company_stddev_order_by {
  _id: order_by
}

"""aggregate stddev_pop on columns"""
type company_stddev_pop_fields {
  _id: Float
}

"""
order by stddev_pop() on columns of table "company"
"""
input company_stddev_pop_order_by {
  _id: order_by
}

"""aggregate stddev_samp on columns"""
type company_stddev_samp_fields {
  _id: Float
}

"""
order by stddev_samp() on columns of table "company"
"""
input company_stddev_samp_order_by {
  _id: order_by
}

"""aggregate sum on columns"""
type company_sum_fields {
  _id: Int
}

"""
order by sum() on columns of table "company"
"""
input company_sum_order_by {
  _id: order_by
}

"""
update columns of table "company"
"""
enum company_update_column {
  """column name"""
  _id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type company_var_pop_fields {
  _id: Float
}

"""
order by var_pop() on columns of table "company"
"""
input company_var_pop_order_by {
  _id: order_by
}

"""aggregate var_samp on columns"""
type company_var_samp_fields {
  _id: Float
}

"""
order by var_samp() on columns of table "company"
"""
input company_var_samp_order_by {
  _id: order_by
}

"""aggregate variance on columns"""
type company_variance_fields {
  _id: Float
}

"""
order by variance() on columns of table "company"
"""
input company_variance_order_by {
  _id: order_by
}

scalar date

"""
expression to compare columns of type date. All fields are combined with logical 'AND'.
"""
input date_comparison_exp {
  _eq: date
  _gt: date
  _gte: date
  _in: [date!]
  _is_null: Boolean
  _lt: date
  _lte: date
  _neq: date
  _nin: [date!]
}

"""
expression to compare columns of type Int. All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
columns and relationships of "interest"
"""
type interest {
  description: String!
  id: Int!
}

"""
aggregated selection of "interest"
"""
type interest_aggregate {
  aggregate: interest_aggregate_fields
  nodes: [interest!]!
}

"""
aggregate fields of "interest"
"""
type interest_aggregate_fields {
  avg: interest_avg_fields
  count(columns: [interest_select_column!], distinct: Boolean): Int
  max: interest_max_fields
  min: interest_min_fields
  stddev: interest_stddev_fields
  stddev_pop: interest_stddev_pop_fields
  stddev_samp: interest_stddev_samp_fields
  sum: interest_sum_fields
  var_pop: interest_var_pop_fields
  var_samp: interest_var_samp_fields
  variance: interest_variance_fields
}

"""
order by aggregate values of table "interest"
"""
input interest_aggregate_order_by {
  avg: interest_avg_order_by
  count: order_by
  max: interest_max_order_by
  min: interest_min_order_by
  stddev: interest_stddev_order_by
  stddev_pop: interest_stddev_pop_order_by
  stddev_samp: interest_stddev_samp_order_by
  sum: interest_sum_order_by
  var_pop: interest_var_pop_order_by
  var_samp: interest_var_samp_order_by
  variance: interest_variance_order_by
}

"""
input type for inserting array relation for remote table "interest"
"""
input interest_arr_rel_insert_input {
  data: [interest_insert_input!]!
  on_conflict: interest_on_conflict
}

"""aggregate avg on columns"""
type interest_avg_fields {
  id: Float
}

"""
order by avg() on columns of table "interest"
"""
input interest_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "interest". All fields are combined with a logical 'AND'.
"""
input interest_bool_exp {
  _and: [interest_bool_exp]
  _not: interest_bool_exp
  _or: [interest_bool_exp]
  description: String_comparison_exp
  id: Int_comparison_exp
}

"""
unique or primary key constraints on table "interest"
"""
enum interest_constraint {
  """unique or primary key constraint"""
  interest_pkey
}

"""
input type for incrementing integer column in table "interest"
"""
input interest_inc_input {
  id: Int
}

"""
input type for inserting data into table "interest"
"""
input interest_insert_input {
  description: String
  id: Int
}

"""aggregate max on columns"""
type interest_max_fields {
  description: String
  id: Int
}

"""
order by max() on columns of table "interest"
"""
input interest_max_order_by {
  description: order_by
  id: order_by
}

"""aggregate min on columns"""
type interest_min_fields {
  description: String
  id: Int
}

"""
order by min() on columns of table "interest"
"""
input interest_min_order_by {
  description: order_by
  id: order_by
}

"""
response of any mutation on the table "interest"
"""
type interest_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [interest!]!
}

"""
input type for inserting object relation for remote table "interest"
"""
input interest_obj_rel_insert_input {
  data: interest_insert_input!
  on_conflict: interest_on_conflict
}

"""
on conflict condition type for table "interest"
"""
input interest_on_conflict {
  constraint: interest_constraint!
  update_columns: [interest_update_column!]!
  where: interest_bool_exp
}

"""
ordering options when selecting data from "interest"
"""
input interest_order_by {
  description: order_by
  id: order_by
}

"""
primary key columns input for table: "interest"
"""
input interest_pk_columns_input {
  id: Int!
}

"""
select columns of table "interest"
"""
enum interest_select_column {
  """column name"""
  description

  """column name"""
  id
}

"""
input type for updating data in table "interest"
"""
input interest_set_input {
  description: String
  id: Int
}

"""aggregate stddev on columns"""
type interest_stddev_fields {
  id: Float
}

"""
order by stddev() on columns of table "interest"
"""
input interest_stddev_order_by {
  id: order_by
}

"""aggregate stddev_pop on columns"""
type interest_stddev_pop_fields {
  id: Float
}

"""
order by stddev_pop() on columns of table "interest"
"""
input interest_stddev_pop_order_by {
  id: order_by
}

"""aggregate stddev_samp on columns"""
type interest_stddev_samp_fields {
  id: Float
}

"""
order by stddev_samp() on columns of table "interest"
"""
input interest_stddev_samp_order_by {
  id: order_by
}

"""aggregate sum on columns"""
type interest_sum_fields {
  id: Int
}

"""
order by sum() on columns of table "interest"
"""
input interest_sum_order_by {
  id: order_by
}

"""
update columns of table "interest"
"""
enum interest_update_column {
  """column name"""
  description

  """column name"""
  id
}

"""aggregate var_pop on columns"""
type interest_var_pop_fields {
  id: Float
}

"""
order by var_pop() on columns of table "interest"
"""
input interest_var_pop_order_by {
  id: order_by
}

"""aggregate var_samp on columns"""
type interest_var_samp_fields {
  id: Float
}

"""
order by var_samp() on columns of table "interest"
"""
input interest_var_samp_order_by {
  id: order_by
}

"""aggregate variance on columns"""
type interest_variance_fields {
  id: Float
}

"""
order by variance() on columns of table "interest"
"""
input interest_variance_order_by {
  id: order_by
}

scalar jsonb

"""
expression to compare columns of type jsonb. All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "learning_unit"
"""
type learning_unit {
  _id: Int!
  category: Int
  image: String

  """An object relationship"""
  la_by_category: category

  """An array relationship"""
  learning_unity_releases(
    """distinct select on columns"""
    distinct_on: [learning_unity_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unity_release_order_by!]

    """filter the rows returned"""
    where: learning_unity_release_bool_exp
  ): [learning_unity_release!]!

  """An aggregated array relationship"""
  learning_unity_releases_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_unity_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unity_release_order_by!]

    """filter the rows returned"""
    where: learning_unity_release_bool_exp
  ): learning_unity_release_aggregate!

  """An array relationship"""
  materials(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): [material!]!

  """An aggregated array relationship"""
  materials_aggregate(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): material_aggregate!

  """An object relationship"""
  mentorship: mentorship
  mentorship_id: Int

  """An object relationship"""
  module: modules
  module_id: Int
  name: String!
}

"""
aggregated selection of "learning_unit"
"""
type learning_unit_aggregate {
  aggregate: learning_unit_aggregate_fields
  nodes: [learning_unit!]!
}

"""
aggregate fields of "learning_unit"
"""
type learning_unit_aggregate_fields {
  avg: learning_unit_avg_fields
  count(columns: [learning_unit_select_column!], distinct: Boolean): Int
  max: learning_unit_max_fields
  min: learning_unit_min_fields
  stddev: learning_unit_stddev_fields
  stddev_pop: learning_unit_stddev_pop_fields
  stddev_samp: learning_unit_stddev_samp_fields
  sum: learning_unit_sum_fields
  var_pop: learning_unit_var_pop_fields
  var_samp: learning_unit_var_samp_fields
  variance: learning_unit_variance_fields
}

"""
order by aggregate values of table "learning_unit"
"""
input learning_unit_aggregate_order_by {
  avg: learning_unit_avg_order_by
  count: order_by
  max: learning_unit_max_order_by
  min: learning_unit_min_order_by
  stddev: learning_unit_stddev_order_by
  stddev_pop: learning_unit_stddev_pop_order_by
  stddev_samp: learning_unit_stddev_samp_order_by
  sum: learning_unit_sum_order_by
  var_pop: learning_unit_var_pop_order_by
  var_samp: learning_unit_var_samp_order_by
  variance: learning_unit_variance_order_by
}

"""
input type for inserting array relation for remote table "learning_unit"
"""
input learning_unit_arr_rel_insert_input {
  data: [learning_unit_insert_input!]!
  on_conflict: learning_unit_on_conflict
}

"""aggregate avg on columns"""
type learning_unit_avg_fields {
  _id: Float
  category: Float
  mentorship_id: Float
  module_id: Float
}

"""
order by avg() on columns of table "learning_unit"
"""
input learning_unit_avg_order_by {
  _id: order_by
  category: order_by
  mentorship_id: order_by
  module_id: order_by
}

"""
Boolean expression to filter rows from the table "learning_unit". All fields are combined with a logical 'AND'.
"""
input learning_unit_bool_exp {
  _and: [learning_unit_bool_exp]
  _id: Int_comparison_exp
  _not: learning_unit_bool_exp
  _or: [learning_unit_bool_exp]
  category: Int_comparison_exp
  image: String_comparison_exp
  la_by_category: category_bool_exp
  learning_unity_releases: learning_unity_release_bool_exp
  materials: material_bool_exp
  mentorship: mentorship_bool_exp
  mentorship_id: Int_comparison_exp
  module: modules_bool_exp
  module_id: Int_comparison_exp
  name: String_comparison_exp
}

"""
unique or primary key constraints on table "learning_unit"
"""
enum learning_unit_constraint {
  """unique or primary key constraint"""
  learning_unit__id_key

  """unique or primary key constraint"""
  learning_unit_pkey
}

"""
input type for incrementing integer column in table "learning_unit"
"""
input learning_unit_inc_input {
  _id: Int
  category: Int
  mentorship_id: Int
  module_id: Int
}

"""
input type for inserting data into table "learning_unit"
"""
input learning_unit_insert_input {
  _id: Int
  category: Int
  image: String
  la_by_category: category_obj_rel_insert_input
  learning_unity_releases: learning_unity_release_arr_rel_insert_input
  materials: material_arr_rel_insert_input
  mentorship: mentorship_obj_rel_insert_input
  mentorship_id: Int
  module: modules_obj_rel_insert_input
  module_id: Int
  name: String
}

"""aggregate max on columns"""
type learning_unit_max_fields {
  _id: Int
  category: Int
  image: String
  mentorship_id: Int
  module_id: Int
  name: String
}

"""
order by max() on columns of table "learning_unit"
"""
input learning_unit_max_order_by {
  _id: order_by
  category: order_by
  image: order_by
  mentorship_id: order_by
  module_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type learning_unit_min_fields {
  _id: Int
  category: Int
  image: String
  mentorship_id: Int
  module_id: Int
  name: String
}

"""
order by min() on columns of table "learning_unit"
"""
input learning_unit_min_order_by {
  _id: order_by
  category: order_by
  image: order_by
  mentorship_id: order_by
  module_id: order_by
  name: order_by
}

"""
response of any mutation on the table "learning_unit"
"""
type learning_unit_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [learning_unit!]!
}

"""
input type for inserting object relation for remote table "learning_unit"
"""
input learning_unit_obj_rel_insert_input {
  data: learning_unit_insert_input!
  on_conflict: learning_unit_on_conflict
}

"""
on conflict condition type for table "learning_unit"
"""
input learning_unit_on_conflict {
  constraint: learning_unit_constraint!
  update_columns: [learning_unit_update_column!]!
  where: learning_unit_bool_exp
}

"""
ordering options when selecting data from "learning_unit"
"""
input learning_unit_order_by {
  _id: order_by
  category: order_by
  image: order_by
  la_by_category: category_order_by
  learning_unity_releases_aggregate: learning_unity_release_aggregate_order_by
  materials_aggregate: material_aggregate_order_by
  mentorship: mentorship_order_by
  mentorship_id: order_by
  module: modules_order_by
  module_id: order_by
  name: order_by
}

"""
primary key columns input for table: "learning_unit"
"""
input learning_unit_pk_columns_input {
  _id: Int!
}

"""
select columns of table "learning_unit"
"""
enum learning_unit_select_column {
  """column name"""
  _id

  """column name"""
  category

  """column name"""
  image

  """column name"""
  mentorship_id

  """column name"""
  module_id

  """column name"""
  name
}

"""
input type for updating data in table "learning_unit"
"""
input learning_unit_set_input {
  _id: Int
  category: Int
  image: String
  mentorship_id: Int
  module_id: Int
  name: String
}

"""aggregate stddev on columns"""
type learning_unit_stddev_fields {
  _id: Float
  category: Float
  mentorship_id: Float
  module_id: Float
}

"""
order by stddev() on columns of table "learning_unit"
"""
input learning_unit_stddev_order_by {
  _id: order_by
  category: order_by
  mentorship_id: order_by
  module_id: order_by
}

"""aggregate stddev_pop on columns"""
type learning_unit_stddev_pop_fields {
  _id: Float
  category: Float
  mentorship_id: Float
  module_id: Float
}

"""
order by stddev_pop() on columns of table "learning_unit"
"""
input learning_unit_stddev_pop_order_by {
  _id: order_by
  category: order_by
  mentorship_id: order_by
  module_id: order_by
}

"""aggregate stddev_samp on columns"""
type learning_unit_stddev_samp_fields {
  _id: Float
  category: Float
  mentorship_id: Float
  module_id: Float
}

"""
order by stddev_samp() on columns of table "learning_unit"
"""
input learning_unit_stddev_samp_order_by {
  _id: order_by
  category: order_by
  mentorship_id: order_by
  module_id: order_by
}

"""aggregate sum on columns"""
type learning_unit_sum_fields {
  _id: Int
  category: Int
  mentorship_id: Int
  module_id: Int
}

"""
order by sum() on columns of table "learning_unit"
"""
input learning_unit_sum_order_by {
  _id: order_by
  category: order_by
  mentorship_id: order_by
  module_id: order_by
}

"""
update columns of table "learning_unit"
"""
enum learning_unit_update_column {
  """column name"""
  _id

  """column name"""
  category

  """column name"""
  image

  """column name"""
  mentorship_id

  """column name"""
  module_id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type learning_unit_var_pop_fields {
  _id: Float
  category: Float
  mentorship_id: Float
  module_id: Float
}

"""
order by var_pop() on columns of table "learning_unit"
"""
input learning_unit_var_pop_order_by {
  _id: order_by
  category: order_by
  mentorship_id: order_by
  module_id: order_by
}

"""aggregate var_samp on columns"""
type learning_unit_var_samp_fields {
  _id: Float
  category: Float
  mentorship_id: Float
  module_id: Float
}

"""
order by var_samp() on columns of table "learning_unit"
"""
input learning_unit_var_samp_order_by {
  _id: order_by
  category: order_by
  mentorship_id: order_by
  module_id: order_by
}

"""aggregate variance on columns"""
type learning_unit_variance_fields {
  _id: Float
  category: Float
  mentorship_id: Float
  module_id: Float
}

"""
order by variance() on columns of table "learning_unit"
"""
input learning_unit_variance_order_by {
  _id: order_by
  category: order_by
  mentorship_id: order_by
  module_id: order_by
}

"""
columns and relationships of "learning_unity_release"
"""
type learning_unity_release {
  _id: Int!
  class: Int!

  """An object relationship"""
  class_id: class!
  learning_unit: Int!

  """An object relationship"""
  learning_unit_id: learning_unit!
  learning_unit_liberation_date: date!
}

"""
aggregated selection of "learning_unity_release"
"""
type learning_unity_release_aggregate {
  aggregate: learning_unity_release_aggregate_fields
  nodes: [learning_unity_release!]!
}

"""
aggregate fields of "learning_unity_release"
"""
type learning_unity_release_aggregate_fields {
  avg: learning_unity_release_avg_fields
  count(columns: [learning_unity_release_select_column!], distinct: Boolean): Int
  max: learning_unity_release_max_fields
  min: learning_unity_release_min_fields
  stddev: learning_unity_release_stddev_fields
  stddev_pop: learning_unity_release_stddev_pop_fields
  stddev_samp: learning_unity_release_stddev_samp_fields
  sum: learning_unity_release_sum_fields
  var_pop: learning_unity_release_var_pop_fields
  var_samp: learning_unity_release_var_samp_fields
  variance: learning_unity_release_variance_fields
}

"""
order by aggregate values of table "learning_unity_release"
"""
input learning_unity_release_aggregate_order_by {
  avg: learning_unity_release_avg_order_by
  count: order_by
  max: learning_unity_release_max_order_by
  min: learning_unity_release_min_order_by
  stddev: learning_unity_release_stddev_order_by
  stddev_pop: learning_unity_release_stddev_pop_order_by
  stddev_samp: learning_unity_release_stddev_samp_order_by
  sum: learning_unity_release_sum_order_by
  var_pop: learning_unity_release_var_pop_order_by
  var_samp: learning_unity_release_var_samp_order_by
  variance: learning_unity_release_variance_order_by
}

"""
input type for inserting array relation for remote table "learning_unity_release"
"""
input learning_unity_release_arr_rel_insert_input {
  data: [learning_unity_release_insert_input!]!
  on_conflict: learning_unity_release_on_conflict
}

"""aggregate avg on columns"""
type learning_unity_release_avg_fields {
  _id: Float
  class: Float
  learning_unit: Float
}

"""
order by avg() on columns of table "learning_unity_release"
"""
input learning_unity_release_avg_order_by {
  _id: order_by
  class: order_by
  learning_unit: order_by
}

"""
Boolean expression to filter rows from the table "learning_unity_release". All fields are combined with a logical 'AND'.
"""
input learning_unity_release_bool_exp {
  _and: [learning_unity_release_bool_exp]
  _id: Int_comparison_exp
  _not: learning_unity_release_bool_exp
  _or: [learning_unity_release_bool_exp]
  class: Int_comparison_exp
  class_id: class_bool_exp
  learning_unit: Int_comparison_exp
  learning_unit_id: learning_unit_bool_exp
  learning_unit_liberation_date: date_comparison_exp
}

"""
unique or primary key constraints on table "learning_unity_release"
"""
enum learning_unity_release_constraint {
  """unique or primary key constraint"""
  learning_unity_release_pkey
}

"""
input type for incrementing integer column in table "learning_unity_release"
"""
input learning_unity_release_inc_input {
  _id: Int
  class: Int
  learning_unit: Int
}

"""
input type for inserting data into table "learning_unity_release"
"""
input learning_unity_release_insert_input {
  _id: Int
  class: Int
  class_id: class_obj_rel_insert_input
  learning_unit: Int
  learning_unit_id: learning_unit_obj_rel_insert_input
  learning_unit_liberation_date: date
}

"""aggregate max on columns"""
type learning_unity_release_max_fields {
  _id: Int
  class: Int
  learning_unit: Int
  learning_unit_liberation_date: date
}

"""
order by max() on columns of table "learning_unity_release"
"""
input learning_unity_release_max_order_by {
  _id: order_by
  class: order_by
  learning_unit: order_by
  learning_unit_liberation_date: order_by
}

"""aggregate min on columns"""
type learning_unity_release_min_fields {
  _id: Int
  class: Int
  learning_unit: Int
  learning_unit_liberation_date: date
}

"""
order by min() on columns of table "learning_unity_release"
"""
input learning_unity_release_min_order_by {
  _id: order_by
  class: order_by
  learning_unit: order_by
  learning_unit_liberation_date: order_by
}

"""
response of any mutation on the table "learning_unity_release"
"""
type learning_unity_release_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [learning_unity_release!]!
}

"""
input type for inserting object relation for remote table "learning_unity_release"
"""
input learning_unity_release_obj_rel_insert_input {
  data: learning_unity_release_insert_input!
  on_conflict: learning_unity_release_on_conflict
}

"""
on conflict condition type for table "learning_unity_release"
"""
input learning_unity_release_on_conflict {
  constraint: learning_unity_release_constraint!
  update_columns: [learning_unity_release_update_column!]!
  where: learning_unity_release_bool_exp
}

"""
ordering options when selecting data from "learning_unity_release"
"""
input learning_unity_release_order_by {
  _id: order_by
  class: order_by
  class_id: class_order_by
  learning_unit: order_by
  learning_unit_id: learning_unit_order_by
  learning_unit_liberation_date: order_by
}

"""
primary key columns input for table: "learning_unity_release"
"""
input learning_unity_release_pk_columns_input {
  _id: Int!
}

"""
select columns of table "learning_unity_release"
"""
enum learning_unity_release_select_column {
  """column name"""
  _id

  """column name"""
  class

  """column name"""
  learning_unit

  """column name"""
  learning_unit_liberation_date
}

"""
input type for updating data in table "learning_unity_release"
"""
input learning_unity_release_set_input {
  _id: Int
  class: Int
  learning_unit: Int
  learning_unit_liberation_date: date
}

"""aggregate stddev on columns"""
type learning_unity_release_stddev_fields {
  _id: Float
  class: Float
  learning_unit: Float
}

"""
order by stddev() on columns of table "learning_unity_release"
"""
input learning_unity_release_stddev_order_by {
  _id: order_by
  class: order_by
  learning_unit: order_by
}

"""aggregate stddev_pop on columns"""
type learning_unity_release_stddev_pop_fields {
  _id: Float
  class: Float
  learning_unit: Float
}

"""
order by stddev_pop() on columns of table "learning_unity_release"
"""
input learning_unity_release_stddev_pop_order_by {
  _id: order_by
  class: order_by
  learning_unit: order_by
}

"""aggregate stddev_samp on columns"""
type learning_unity_release_stddev_samp_fields {
  _id: Float
  class: Float
  learning_unit: Float
}

"""
order by stddev_samp() on columns of table "learning_unity_release"
"""
input learning_unity_release_stddev_samp_order_by {
  _id: order_by
  class: order_by
  learning_unit: order_by
}

"""aggregate sum on columns"""
type learning_unity_release_sum_fields {
  _id: Int
  class: Int
  learning_unit: Int
}

"""
order by sum() on columns of table "learning_unity_release"
"""
input learning_unity_release_sum_order_by {
  _id: order_by
  class: order_by
  learning_unit: order_by
}

"""
update columns of table "learning_unity_release"
"""
enum learning_unity_release_update_column {
  """column name"""
  _id

  """column name"""
  class

  """column name"""
  learning_unit

  """column name"""
  learning_unit_liberation_date
}

"""aggregate var_pop on columns"""
type learning_unity_release_var_pop_fields {
  _id: Float
  class: Float
  learning_unit: Float
}

"""
order by var_pop() on columns of table "learning_unity_release"
"""
input learning_unity_release_var_pop_order_by {
  _id: order_by
  class: order_by
  learning_unit: order_by
}

"""aggregate var_samp on columns"""
type learning_unity_release_var_samp_fields {
  _id: Float
  class: Float
  learning_unit: Float
}

"""
order by var_samp() on columns of table "learning_unity_release"
"""
input learning_unity_release_var_samp_order_by {
  _id: order_by
  class: order_by
  learning_unit: order_by
}

"""aggregate variance on columns"""
type learning_unity_release_variance_fields {
  _id: Float
  class: Float
  learning_unit: Float
}

"""
order by variance() on columns of table "learning_unity_release"
"""
input learning_unity_release_variance_order_by {
  _id: order_by
  class: order_by
  learning_unit: order_by
}

"""
columns and relationships of "material"
"""
type material {
  _id: Int!
  content(
    """JSON select path"""
    path: String
  ): jsonb
  created_at: timestamptz!
  description: String
  duration: Int
  extra(
    """JSON select path"""
    path: String
  ): jsonb

  """An object relationship"""
  learning_unit: learning_unit
  learning_unity: Int

  """An object relationship"""
  materialByType: material_type
  material_type: Int
  order: Int

  """An array relationship"""
  student_material_favorites(
    """distinct select on columns"""
    distinct_on: [student_material_favorite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_favorite_order_by!]

    """filter the rows returned"""
    where: student_material_favorite_bool_exp
  ): [student_material_favorite!]!

  """An aggregated array relationship"""
  student_material_favorites_aggregate(
    """distinct select on columns"""
    distinct_on: [student_material_favorite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_favorite_order_by!]

    """filter the rows returned"""
    where: student_material_favorite_bool_exp
  ): student_material_favorite_aggregate!

  """An array relationship"""
  student_material_histories(
    """distinct select on columns"""
    distinct_on: [student_material_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_history_order_by!]

    """filter the rows returned"""
    where: student_material_history_bool_exp
  ): [student_material_history!]!

  """An aggregated array relationship"""
  student_material_histories_aggregate(
    """distinct select on columns"""
    distinct_on: [student_material_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_history_order_by!]

    """filter the rows returned"""
    where: student_material_history_bool_exp
  ): student_material_history_aggregate!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """An aggregated array relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): tags_aggregate!
  thumbnail: String
  title: String!
  views: Int!
}

"""
aggregated selection of "material"
"""
type material_aggregate {
  aggregate: material_aggregate_fields
  nodes: [material!]!
}

"""
aggregate fields of "material"
"""
type material_aggregate_fields {
  avg: material_avg_fields
  count(columns: [material_select_column!], distinct: Boolean): Int
  max: material_max_fields
  min: material_min_fields
  stddev: material_stddev_fields
  stddev_pop: material_stddev_pop_fields
  stddev_samp: material_stddev_samp_fields
  sum: material_sum_fields
  var_pop: material_var_pop_fields
  var_samp: material_var_samp_fields
  variance: material_variance_fields
}

"""
order by aggregate values of table "material"
"""
input material_aggregate_order_by {
  avg: material_avg_order_by
  count: order_by
  max: material_max_order_by
  min: material_min_order_by
  stddev: material_stddev_order_by
  stddev_pop: material_stddev_pop_order_by
  stddev_samp: material_stddev_samp_order_by
  sum: material_sum_order_by
  var_pop: material_var_pop_order_by
  var_samp: material_var_samp_order_by
  variance: material_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input material_append_input {
  content: jsonb
  extra: jsonb
}

"""
input type for inserting array relation for remote table "material"
"""
input material_arr_rel_insert_input {
  data: [material_insert_input!]!
  on_conflict: material_on_conflict
}

"""aggregate avg on columns"""
type material_avg_fields {
  _id: Float
  duration: Float
  learning_unity: Float
  material_type: Float
  order: Float
  views: Float
}

"""
order by avg() on columns of table "material"
"""
input material_avg_order_by {
  _id: order_by
  duration: order_by
  learning_unity: order_by
  material_type: order_by
  order: order_by
  views: order_by
}

"""
Boolean expression to filter rows from the table "material". All fields are combined with a logical 'AND'.
"""
input material_bool_exp {
  _and: [material_bool_exp]
  _id: Int_comparison_exp
  _not: material_bool_exp
  _or: [material_bool_exp]
  content: jsonb_comparison_exp
  created_at: timestamptz_comparison_exp
  description: String_comparison_exp
  duration: Int_comparison_exp
  extra: jsonb_comparison_exp
  learning_unit: learning_unit_bool_exp
  learning_unity: Int_comparison_exp
  materialByType: material_type_bool_exp
  material_type: Int_comparison_exp
  order: Int_comparison_exp
  student_material_favorites: student_material_favorite_bool_exp
  student_material_histories: student_material_history_bool_exp
  tags: tags_bool_exp
  thumbnail: String_comparison_exp
  title: String_comparison_exp
  views: Int_comparison_exp
}

"""
unique or primary key constraints on table "material"
"""
enum material_constraint {
  """unique or primary key constraint"""
  material_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input material_delete_at_path_input {
  content: [String]
  extra: [String]
}

"""
delete the array element with specified index (negative integers count from the
end). throws an error if top level container is not an array
"""
input material_delete_elem_input {
  content: Int
  extra: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input material_delete_key_input {
  content: String
  extra: String
}

"""
input type for incrementing integer column in table "material"
"""
input material_inc_input {
  _id: Int
  duration: Int
  learning_unity: Int
  material_type: Int
  order: Int
  views: Int
}

"""
input type for inserting data into table "material"
"""
input material_insert_input {
  _id: Int
  content: jsonb
  created_at: timestamptz
  description: String
  duration: Int
  extra: jsonb
  learning_unit: learning_unit_obj_rel_insert_input
  learning_unity: Int
  materialByType: material_type_obj_rel_insert_input
  material_type: Int
  order: Int
  student_material_favorites: student_material_favorite_arr_rel_insert_input
  student_material_histories: student_material_history_arr_rel_insert_input
  tags: tags_arr_rel_insert_input
  thumbnail: String
  title: String
  views: Int
}

"""aggregate max on columns"""
type material_max_fields {
  _id: Int
  created_at: timestamptz
  description: String
  duration: Int
  learning_unity: Int
  material_type: Int
  order: Int
  thumbnail: String
  title: String
  views: Int
}

"""
order by max() on columns of table "material"
"""
input material_max_order_by {
  _id: order_by
  created_at: order_by
  description: order_by
  duration: order_by
  learning_unity: order_by
  material_type: order_by
  order: order_by
  thumbnail: order_by
  title: order_by
  views: order_by
}

"""aggregate min on columns"""
type material_min_fields {
  _id: Int
  created_at: timestamptz
  description: String
  duration: Int
  learning_unity: Int
  material_type: Int
  order: Int
  thumbnail: String
  title: String
  views: Int
}

"""
order by min() on columns of table "material"
"""
input material_min_order_by {
  _id: order_by
  created_at: order_by
  description: order_by
  duration: order_by
  learning_unity: order_by
  material_type: order_by
  order: order_by
  thumbnail: order_by
  title: order_by
  views: order_by
}

"""
response of any mutation on the table "material"
"""
type material_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [material!]!
}

"""
input type for inserting object relation for remote table "material"
"""
input material_obj_rel_insert_input {
  data: material_insert_input!
  on_conflict: material_on_conflict
}

"""
on conflict condition type for table "material"
"""
input material_on_conflict {
  constraint: material_constraint!
  update_columns: [material_update_column!]!
  where: material_bool_exp
}

"""
ordering options when selecting data from "material"
"""
input material_order_by {
  _id: order_by
  content: order_by
  created_at: order_by
  description: order_by
  duration: order_by
  extra: order_by
  learning_unit: learning_unit_order_by
  learning_unity: order_by
  materialByType: material_type_order_by
  material_type: order_by
  order: order_by
  student_material_favorites_aggregate: student_material_favorite_aggregate_order_by
  student_material_histories_aggregate: student_material_history_aggregate_order_by
  tags_aggregate: tags_aggregate_order_by
  thumbnail: order_by
  title: order_by
  views: order_by
}

"""
primary key columns input for table: "material"
"""
input material_pk_columns_input {
  _id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input material_prepend_input {
  content: jsonb
  extra: jsonb
}

"""
select columns of table "material"
"""
enum material_select_column {
  """column name"""
  _id

  """column name"""
  content

  """column name"""
  created_at

  """column name"""
  description

  """column name"""
  duration

  """column name"""
  extra

  """column name"""
  learning_unity

  """column name"""
  material_type

  """column name"""
  order

  """column name"""
  thumbnail

  """column name"""
  title

  """column name"""
  views
}

"""
input type for updating data in table "material"
"""
input material_set_input {
  _id: Int
  content: jsonb
  created_at: timestamptz
  description: String
  duration: Int
  extra: jsonb
  learning_unity: Int
  material_type: Int
  order: Int
  thumbnail: String
  title: String
  views: Int
}

"""aggregate stddev on columns"""
type material_stddev_fields {
  _id: Float
  duration: Float
  learning_unity: Float
  material_type: Float
  order: Float
  views: Float
}

"""
order by stddev() on columns of table "material"
"""
input material_stddev_order_by {
  _id: order_by
  duration: order_by
  learning_unity: order_by
  material_type: order_by
  order: order_by
  views: order_by
}

"""aggregate stddev_pop on columns"""
type material_stddev_pop_fields {
  _id: Float
  duration: Float
  learning_unity: Float
  material_type: Float
  order: Float
  views: Float
}

"""
order by stddev_pop() on columns of table "material"
"""
input material_stddev_pop_order_by {
  _id: order_by
  duration: order_by
  learning_unity: order_by
  material_type: order_by
  order: order_by
  views: order_by
}

"""aggregate stddev_samp on columns"""
type material_stddev_samp_fields {
  _id: Float
  duration: Float
  learning_unity: Float
  material_type: Float
  order: Float
  views: Float
}

"""
order by stddev_samp() on columns of table "material"
"""
input material_stddev_samp_order_by {
  _id: order_by
  duration: order_by
  learning_unity: order_by
  material_type: order_by
  order: order_by
  views: order_by
}

"""aggregate sum on columns"""
type material_sum_fields {
  _id: Int
  duration: Int
  learning_unity: Int
  material_type: Int
  order: Int
  views: Int
}

"""
order by sum() on columns of table "material"
"""
input material_sum_order_by {
  _id: order_by
  duration: order_by
  learning_unity: order_by
  material_type: order_by
  order: order_by
  views: order_by
}

"""
columns and relationships of "material_type"
"""
type material_type {
  _id: Int!
  description: String!

  """An array relationship"""
  materials(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): [material!]!

  """An aggregated array relationship"""
  materials_aggregate(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): material_aggregate!
}

"""
aggregated selection of "material_type"
"""
type material_type_aggregate {
  aggregate: material_type_aggregate_fields
  nodes: [material_type!]!
}

"""
aggregate fields of "material_type"
"""
type material_type_aggregate_fields {
  avg: material_type_avg_fields
  count(columns: [material_type_select_column!], distinct: Boolean): Int
  max: material_type_max_fields
  min: material_type_min_fields
  stddev: material_type_stddev_fields
  stddev_pop: material_type_stddev_pop_fields
  stddev_samp: material_type_stddev_samp_fields
  sum: material_type_sum_fields
  var_pop: material_type_var_pop_fields
  var_samp: material_type_var_samp_fields
  variance: material_type_variance_fields
}

"""
order by aggregate values of table "material_type"
"""
input material_type_aggregate_order_by {
  avg: material_type_avg_order_by
  count: order_by
  max: material_type_max_order_by
  min: material_type_min_order_by
  stddev: material_type_stddev_order_by
  stddev_pop: material_type_stddev_pop_order_by
  stddev_samp: material_type_stddev_samp_order_by
  sum: material_type_sum_order_by
  var_pop: material_type_var_pop_order_by
  var_samp: material_type_var_samp_order_by
  variance: material_type_variance_order_by
}

"""
input type for inserting array relation for remote table "material_type"
"""
input material_type_arr_rel_insert_input {
  data: [material_type_insert_input!]!
  on_conflict: material_type_on_conflict
}

"""aggregate avg on columns"""
type material_type_avg_fields {
  _id: Float
}

"""
order by avg() on columns of table "material_type"
"""
input material_type_avg_order_by {
  _id: order_by
}

"""
Boolean expression to filter rows from the table "material_type". All fields are combined with a logical 'AND'.
"""
input material_type_bool_exp {
  _and: [material_type_bool_exp]
  _id: Int_comparison_exp
  _not: material_type_bool_exp
  _or: [material_type_bool_exp]
  description: String_comparison_exp
  materials: material_bool_exp
}

"""
unique or primary key constraints on table "material_type"
"""
enum material_type_constraint {
  """unique or primary key constraint"""
  material_type_pkey
}

"""
input type for incrementing integer column in table "material_type"
"""
input material_type_inc_input {
  _id: Int
}

"""
input type for inserting data into table "material_type"
"""
input material_type_insert_input {
  _id: Int
  description: String
  materials: material_arr_rel_insert_input
}

"""aggregate max on columns"""
type material_type_max_fields {
  _id: Int
  description: String
}

"""
order by max() on columns of table "material_type"
"""
input material_type_max_order_by {
  _id: order_by
  description: order_by
}

"""aggregate min on columns"""
type material_type_min_fields {
  _id: Int
  description: String
}

"""
order by min() on columns of table "material_type"
"""
input material_type_min_order_by {
  _id: order_by
  description: order_by
}

"""
response of any mutation on the table "material_type"
"""
type material_type_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [material_type!]!
}

"""
input type for inserting object relation for remote table "material_type"
"""
input material_type_obj_rel_insert_input {
  data: material_type_insert_input!
  on_conflict: material_type_on_conflict
}

"""
on conflict condition type for table "material_type"
"""
input material_type_on_conflict {
  constraint: material_type_constraint!
  update_columns: [material_type_update_column!]!
  where: material_type_bool_exp
}

"""
ordering options when selecting data from "material_type"
"""
input material_type_order_by {
  _id: order_by
  description: order_by
  materials_aggregate: material_aggregate_order_by
}

"""
primary key columns input for table: "material_type"
"""
input material_type_pk_columns_input {
  _id: Int!
}

"""
select columns of table "material_type"
"""
enum material_type_select_column {
  """column name"""
  _id

  """column name"""
  description
}

"""
input type for updating data in table "material_type"
"""
input material_type_set_input {
  _id: Int
  description: String
}

"""aggregate stddev on columns"""
type material_type_stddev_fields {
  _id: Float
}

"""
order by stddev() on columns of table "material_type"
"""
input material_type_stddev_order_by {
  _id: order_by
}

"""aggregate stddev_pop on columns"""
type material_type_stddev_pop_fields {
  _id: Float
}

"""
order by stddev_pop() on columns of table "material_type"
"""
input material_type_stddev_pop_order_by {
  _id: order_by
}

"""aggregate stddev_samp on columns"""
type material_type_stddev_samp_fields {
  _id: Float
}

"""
order by stddev_samp() on columns of table "material_type"
"""
input material_type_stddev_samp_order_by {
  _id: order_by
}

"""aggregate sum on columns"""
type material_type_sum_fields {
  _id: Int
}

"""
order by sum() on columns of table "material_type"
"""
input material_type_sum_order_by {
  _id: order_by
}

"""
update columns of table "material_type"
"""
enum material_type_update_column {
  """column name"""
  _id

  """column name"""
  description
}

"""aggregate var_pop on columns"""
type material_type_var_pop_fields {
  _id: Float
}

"""
order by var_pop() on columns of table "material_type"
"""
input material_type_var_pop_order_by {
  _id: order_by
}

"""aggregate var_samp on columns"""
type material_type_var_samp_fields {
  _id: Float
}

"""
order by var_samp() on columns of table "material_type"
"""
input material_type_var_samp_order_by {
  _id: order_by
}

"""aggregate variance on columns"""
type material_type_variance_fields {
  _id: Float
}

"""
order by variance() on columns of table "material_type"
"""
input material_type_variance_order_by {
  _id: order_by
}

"""
update columns of table "material"
"""
enum material_update_column {
  """column name"""
  _id

  """column name"""
  content

  """column name"""
  created_at

  """column name"""
  description

  """column name"""
  duration

  """column name"""
  extra

  """column name"""
  learning_unity

  """column name"""
  material_type

  """column name"""
  order

  """column name"""
  thumbnail

  """column name"""
  title

  """column name"""
  views
}

"""aggregate var_pop on columns"""
type material_var_pop_fields {
  _id: Float
  duration: Float
  learning_unity: Float
  material_type: Float
  order: Float
  views: Float
}

"""
order by var_pop() on columns of table "material"
"""
input material_var_pop_order_by {
  _id: order_by
  duration: order_by
  learning_unity: order_by
  material_type: order_by
  order: order_by
  views: order_by
}

"""aggregate var_samp on columns"""
type material_var_samp_fields {
  _id: Float
  duration: Float
  learning_unity: Float
  material_type: Float
  order: Float
  views: Float
}

"""
order by var_samp() on columns of table "material"
"""
input material_var_samp_order_by {
  _id: order_by
  duration: order_by
  learning_unity: order_by
  material_type: order_by
  order: order_by
  views: order_by
}

"""aggregate variance on columns"""
type material_variance_fields {
  _id: Float
  duration: Float
  learning_unity: Float
  material_type: Float
  order: Float
  views: Float
}

"""
order by variance() on columns of table "material"
"""
input material_variance_order_by {
  _id: order_by
  duration: order_by
  learning_unity: order_by
  material_type: order_by
  order: order_by
  views: order_by
}

"""
columns and relationships of "mentorship"
"""
type mentorship {
  _id: Int!

  """An array relationship"""
  learning_units(
    """distinct select on columns"""
    distinct_on: [learning_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unit_order_by!]

    """filter the rows returned"""
    where: learning_unit_bool_exp
  ): [learning_unit!]!

  """An aggregated array relationship"""
  learning_units_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unit_order_by!]

    """filter the rows returned"""
    where: learning_unit_bool_exp
  ): learning_unit_aggregate!
  masterclass: String!
  module_id: Int
}

"""
aggregated selection of "mentorship"
"""
type mentorship_aggregate {
  aggregate: mentorship_aggregate_fields
  nodes: [mentorship!]!
}

"""
aggregate fields of "mentorship"
"""
type mentorship_aggregate_fields {
  avg: mentorship_avg_fields
  count(columns: [mentorship_select_column!], distinct: Boolean): Int
  max: mentorship_max_fields
  min: mentorship_min_fields
  stddev: mentorship_stddev_fields
  stddev_pop: mentorship_stddev_pop_fields
  stddev_samp: mentorship_stddev_samp_fields
  sum: mentorship_sum_fields
  var_pop: mentorship_var_pop_fields
  var_samp: mentorship_var_samp_fields
  variance: mentorship_variance_fields
}

"""
order by aggregate values of table "mentorship"
"""
input mentorship_aggregate_order_by {
  avg: mentorship_avg_order_by
  count: order_by
  max: mentorship_max_order_by
  min: mentorship_min_order_by
  stddev: mentorship_stddev_order_by
  stddev_pop: mentorship_stddev_pop_order_by
  stddev_samp: mentorship_stddev_samp_order_by
  sum: mentorship_sum_order_by
  var_pop: mentorship_var_pop_order_by
  var_samp: mentorship_var_samp_order_by
  variance: mentorship_variance_order_by
}

"""
input type for inserting array relation for remote table "mentorship"
"""
input mentorship_arr_rel_insert_input {
  data: [mentorship_insert_input!]!
  on_conflict: mentorship_on_conflict
}

"""aggregate avg on columns"""
type mentorship_avg_fields {
  _id: Float
  module_id: Float
}

"""
order by avg() on columns of table "mentorship"
"""
input mentorship_avg_order_by {
  _id: order_by
  module_id: order_by
}

"""
Boolean expression to filter rows from the table "mentorship". All fields are combined with a logical 'AND'.
"""
input mentorship_bool_exp {
  _and: [mentorship_bool_exp]
  _id: Int_comparison_exp
  _not: mentorship_bool_exp
  _or: [mentorship_bool_exp]
  learning_units: learning_unit_bool_exp
  masterclass: String_comparison_exp
  module_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "mentorship"
"""
enum mentorship_constraint {
  """unique or primary key constraint"""
  mentorship_pkey
}

"""
input type for incrementing integer column in table "mentorship"
"""
input mentorship_inc_input {
  _id: Int
  module_id: Int
}

"""
input type for inserting data into table "mentorship"
"""
input mentorship_insert_input {
  _id: Int
  learning_units: learning_unit_arr_rel_insert_input
  masterclass: String
  module_id: Int
}

"""aggregate max on columns"""
type mentorship_max_fields {
  _id: Int
  masterclass: String
  module_id: Int
}

"""
order by max() on columns of table "mentorship"
"""
input mentorship_max_order_by {
  _id: order_by
  masterclass: order_by
  module_id: order_by
}

"""aggregate min on columns"""
type mentorship_min_fields {
  _id: Int
  masterclass: String
  module_id: Int
}

"""
order by min() on columns of table "mentorship"
"""
input mentorship_min_order_by {
  _id: order_by
  masterclass: order_by
  module_id: order_by
}

"""
response of any mutation on the table "mentorship"
"""
type mentorship_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [mentorship!]!
}

"""
input type for inserting object relation for remote table "mentorship"
"""
input mentorship_obj_rel_insert_input {
  data: mentorship_insert_input!
  on_conflict: mentorship_on_conflict
}

"""
on conflict condition type for table "mentorship"
"""
input mentorship_on_conflict {
  constraint: mentorship_constraint!
  update_columns: [mentorship_update_column!]!
  where: mentorship_bool_exp
}

"""
ordering options when selecting data from "mentorship"
"""
input mentorship_order_by {
  _id: order_by
  learning_units_aggregate: learning_unit_aggregate_order_by
  masterclass: order_by
  module_id: order_by
}

"""
primary key columns input for table: "mentorship"
"""
input mentorship_pk_columns_input {
  _id: Int!
}

"""
select columns of table "mentorship"
"""
enum mentorship_select_column {
  """column name"""
  _id

  """column name"""
  masterclass

  """column name"""
  module_id
}

"""
input type for updating data in table "mentorship"
"""
input mentorship_set_input {
  _id: Int
  masterclass: String
  module_id: Int
}

"""aggregate stddev on columns"""
type mentorship_stddev_fields {
  _id: Float
  module_id: Float
}

"""
order by stddev() on columns of table "mentorship"
"""
input mentorship_stddev_order_by {
  _id: order_by
  module_id: order_by
}

"""aggregate stddev_pop on columns"""
type mentorship_stddev_pop_fields {
  _id: Float
  module_id: Float
}

"""
order by stddev_pop() on columns of table "mentorship"
"""
input mentorship_stddev_pop_order_by {
  _id: order_by
  module_id: order_by
}

"""aggregate stddev_samp on columns"""
type mentorship_stddev_samp_fields {
  _id: Float
  module_id: Float
}

"""
order by stddev_samp() on columns of table "mentorship"
"""
input mentorship_stddev_samp_order_by {
  _id: order_by
  module_id: order_by
}

"""aggregate sum on columns"""
type mentorship_sum_fields {
  _id: Int
  module_id: Int
}

"""
order by sum() on columns of table "mentorship"
"""
input mentorship_sum_order_by {
  _id: order_by
  module_id: order_by
}

"""
update columns of table "mentorship"
"""
enum mentorship_update_column {
  """column name"""
  _id

  """column name"""
  masterclass

  """column name"""
  module_id
}

"""aggregate var_pop on columns"""
type mentorship_var_pop_fields {
  _id: Float
  module_id: Float
}

"""
order by var_pop() on columns of table "mentorship"
"""
input mentorship_var_pop_order_by {
  _id: order_by
  module_id: order_by
}

"""aggregate var_samp on columns"""
type mentorship_var_samp_fields {
  _id: Float
  module_id: Float
}

"""
order by var_samp() on columns of table "mentorship"
"""
input mentorship_var_samp_order_by {
  _id: order_by
  module_id: order_by
}

"""aggregate variance on columns"""
type mentorship_variance_fields {
  _id: Float
  module_id: Float
}

"""
order by variance() on columns of table "mentorship"
"""
input mentorship_variance_order_by {
  _id: order_by
  module_id: order_by
}

"""
columns and relationships of "module_release"
"""
type module_release {
  class: Int!

  """An object relationship"""
  classByClass: class!
  id: Int!
  module: Int!

  """An object relationship"""
  moduleByModule: modules!
  release_date: date!
}

"""
aggregated selection of "module_release"
"""
type module_release_aggregate {
  aggregate: module_release_aggregate_fields
  nodes: [module_release!]!
}

"""
aggregate fields of "module_release"
"""
type module_release_aggregate_fields {
  avg: module_release_avg_fields
  count(columns: [module_release_select_column!], distinct: Boolean): Int
  max: module_release_max_fields
  min: module_release_min_fields
  stddev: module_release_stddev_fields
  stddev_pop: module_release_stddev_pop_fields
  stddev_samp: module_release_stddev_samp_fields
  sum: module_release_sum_fields
  var_pop: module_release_var_pop_fields
  var_samp: module_release_var_samp_fields
  variance: module_release_variance_fields
}

"""
order by aggregate values of table "module_release"
"""
input module_release_aggregate_order_by {
  avg: module_release_avg_order_by
  count: order_by
  max: module_release_max_order_by
  min: module_release_min_order_by
  stddev: module_release_stddev_order_by
  stddev_pop: module_release_stddev_pop_order_by
  stddev_samp: module_release_stddev_samp_order_by
  sum: module_release_sum_order_by
  var_pop: module_release_var_pop_order_by
  var_samp: module_release_var_samp_order_by
  variance: module_release_variance_order_by
}

"""
input type for inserting array relation for remote table "module_release"
"""
input module_release_arr_rel_insert_input {
  data: [module_release_insert_input!]!
  on_conflict: module_release_on_conflict
}

"""aggregate avg on columns"""
type module_release_avg_fields {
  class: Float
  id: Float
  module: Float
}

"""
order by avg() on columns of table "module_release"
"""
input module_release_avg_order_by {
  class: order_by
  id: order_by
  module: order_by
}

"""
Boolean expression to filter rows from the table "module_release". All fields are combined with a logical 'AND'.
"""
input module_release_bool_exp {
  _and: [module_release_bool_exp]
  _not: module_release_bool_exp
  _or: [module_release_bool_exp]
  class: Int_comparison_exp
  classByClass: class_bool_exp
  id: Int_comparison_exp
  module: Int_comparison_exp
  moduleByModule: modules_bool_exp
  release_date: date_comparison_exp
}

"""
unique or primary key constraints on table "module_release"
"""
enum module_release_constraint {
  """unique or primary key constraint"""
  course_release_pkey
}

"""
input type for incrementing integer column in table "module_release"
"""
input module_release_inc_input {
  class: Int
  id: Int
  module: Int
}

"""
input type for inserting data into table "module_release"
"""
input module_release_insert_input {
  class: Int
  classByClass: class_obj_rel_insert_input
  id: Int
  module: Int
  moduleByModule: modules_obj_rel_insert_input
  release_date: date
}

"""aggregate max on columns"""
type module_release_max_fields {
  class: Int
  id: Int
  module: Int
  release_date: date
}

"""
order by max() on columns of table "module_release"
"""
input module_release_max_order_by {
  class: order_by
  id: order_by
  module: order_by
  release_date: order_by
}

"""aggregate min on columns"""
type module_release_min_fields {
  class: Int
  id: Int
  module: Int
  release_date: date
}

"""
order by min() on columns of table "module_release"
"""
input module_release_min_order_by {
  class: order_by
  id: order_by
  module: order_by
  release_date: order_by
}

"""
response of any mutation on the table "module_release"
"""
type module_release_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [module_release!]!
}

"""
input type for inserting object relation for remote table "module_release"
"""
input module_release_obj_rel_insert_input {
  data: module_release_insert_input!
  on_conflict: module_release_on_conflict
}

"""
on conflict condition type for table "module_release"
"""
input module_release_on_conflict {
  constraint: module_release_constraint!
  update_columns: [module_release_update_column!]!
  where: module_release_bool_exp
}

"""
ordering options when selecting data from "module_release"
"""
input module_release_order_by {
  class: order_by
  classByClass: class_order_by
  id: order_by
  module: order_by
  moduleByModule: modules_order_by
  release_date: order_by
}

"""
primary key columns input for table: "module_release"
"""
input module_release_pk_columns_input {
  id: Int!
}

"""
select columns of table "module_release"
"""
enum module_release_select_column {
  """column name"""
  class

  """column name"""
  id

  """column name"""
  module

  """column name"""
  release_date
}

"""
input type for updating data in table "module_release"
"""
input module_release_set_input {
  class: Int
  id: Int
  module: Int
  release_date: date
}

"""aggregate stddev on columns"""
type module_release_stddev_fields {
  class: Float
  id: Float
  module: Float
}

"""
order by stddev() on columns of table "module_release"
"""
input module_release_stddev_order_by {
  class: order_by
  id: order_by
  module: order_by
}

"""aggregate stddev_pop on columns"""
type module_release_stddev_pop_fields {
  class: Float
  id: Float
  module: Float
}

"""
order by stddev_pop() on columns of table "module_release"
"""
input module_release_stddev_pop_order_by {
  class: order_by
  id: order_by
  module: order_by
}

"""aggregate stddev_samp on columns"""
type module_release_stddev_samp_fields {
  class: Float
  id: Float
  module: Float
}

"""
order by stddev_samp() on columns of table "module_release"
"""
input module_release_stddev_samp_order_by {
  class: order_by
  id: order_by
  module: order_by
}

"""aggregate sum on columns"""
type module_release_sum_fields {
  class: Int
  id: Int
  module: Int
}

"""
order by sum() on columns of table "module_release"
"""
input module_release_sum_order_by {
  class: order_by
  id: order_by
  module: order_by
}

"""
update columns of table "module_release"
"""
enum module_release_update_column {
  """column name"""
  class

  """column name"""
  id

  """column name"""
  module

  """column name"""
  release_date
}

"""aggregate var_pop on columns"""
type module_release_var_pop_fields {
  class: Float
  id: Float
  module: Float
}

"""
order by var_pop() on columns of table "module_release"
"""
input module_release_var_pop_order_by {
  class: order_by
  id: order_by
  module: order_by
}

"""aggregate var_samp on columns"""
type module_release_var_samp_fields {
  class: Float
  id: Float
  module: Float
}

"""
order by var_samp() on columns of table "module_release"
"""
input module_release_var_samp_order_by {
  class: order_by
  id: order_by
  module: order_by
}

"""aggregate variance on columns"""
type module_release_variance_fields {
  class: Float
  id: Float
  module: Float
}

"""
order by variance() on columns of table "module_release"
"""
input module_release_variance_order_by {
  class: order_by
  id: order_by
  module: order_by
}

"""
columns and relationships of "modules"
"""
type modules {
  _id: Int!

  """An array relationship"""
  learning_units(
    """distinct select on columns"""
    distinct_on: [learning_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unit_order_by!]

    """filter the rows returned"""
    where: learning_unit_bool_exp
  ): [learning_unit!]!

  """An aggregated array relationship"""
  learning_units_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unit_order_by!]

    """filter the rows returned"""
    where: learning_unit_bool_exp
  ): learning_unit_aggregate!

  """An array relationship"""
  module_releases(
    """distinct select on columns"""
    distinct_on: [module_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [module_release_order_by!]

    """filter the rows returned"""
    where: module_release_bool_exp
  ): [module_release!]!

  """An aggregated array relationship"""
  module_releases_aggregate(
    """distinct select on columns"""
    distinct_on: [module_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [module_release_order_by!]

    """filter the rows returned"""
    where: module_release_bool_exp
  ): module_release_aggregate!
  name: String!
  objective: String!
  thumbnail: String
}

"""
aggregated selection of "modules"
"""
type modules_aggregate {
  aggregate: modules_aggregate_fields
  nodes: [modules!]!
}

"""
aggregate fields of "modules"
"""
type modules_aggregate_fields {
  avg: modules_avg_fields
  count(columns: [modules_select_column!], distinct: Boolean): Int
  max: modules_max_fields
  min: modules_min_fields
  stddev: modules_stddev_fields
  stddev_pop: modules_stddev_pop_fields
  stddev_samp: modules_stddev_samp_fields
  sum: modules_sum_fields
  var_pop: modules_var_pop_fields
  var_samp: modules_var_samp_fields
  variance: modules_variance_fields
}

"""
order by aggregate values of table "modules"
"""
input modules_aggregate_order_by {
  avg: modules_avg_order_by
  count: order_by
  max: modules_max_order_by
  min: modules_min_order_by
  stddev: modules_stddev_order_by
  stddev_pop: modules_stddev_pop_order_by
  stddev_samp: modules_stddev_samp_order_by
  sum: modules_sum_order_by
  var_pop: modules_var_pop_order_by
  var_samp: modules_var_samp_order_by
  variance: modules_variance_order_by
}

"""
input type for inserting array relation for remote table "modules"
"""
input modules_arr_rel_insert_input {
  data: [modules_insert_input!]!
  on_conflict: modules_on_conflict
}

"""aggregate avg on columns"""
type modules_avg_fields {
  _id: Float
}

"""
order by avg() on columns of table "modules"
"""
input modules_avg_order_by {
  _id: order_by
}

"""
Boolean expression to filter rows from the table "modules". All fields are combined with a logical 'AND'.
"""
input modules_bool_exp {
  _and: [modules_bool_exp]
  _id: Int_comparison_exp
  _not: modules_bool_exp
  _or: [modules_bool_exp]
  learning_units: learning_unit_bool_exp
  module_releases: module_release_bool_exp
  name: String_comparison_exp
  objective: String_comparison_exp
  thumbnail: String_comparison_exp
}

"""
unique or primary key constraints on table "modules"
"""
enum modules_constraint {
  """unique or primary key constraint"""
  modules_pkey
}

"""
input type for incrementing integer column in table "modules"
"""
input modules_inc_input {
  _id: Int
}

"""
input type for inserting data into table "modules"
"""
input modules_insert_input {
  _id: Int
  learning_units: learning_unit_arr_rel_insert_input
  module_releases: module_release_arr_rel_insert_input
  name: String
  objective: String
  thumbnail: String
}

"""aggregate max on columns"""
type modules_max_fields {
  _id: Int
  name: String
  objective: String
  thumbnail: String
}

"""
order by max() on columns of table "modules"
"""
input modules_max_order_by {
  _id: order_by
  name: order_by
  objective: order_by
  thumbnail: order_by
}

"""aggregate min on columns"""
type modules_min_fields {
  _id: Int
  name: String
  objective: String
  thumbnail: String
}

"""
order by min() on columns of table "modules"
"""
input modules_min_order_by {
  _id: order_by
  name: order_by
  objective: order_by
  thumbnail: order_by
}

"""
response of any mutation on the table "modules"
"""
type modules_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [modules!]!
}

"""
input type for inserting object relation for remote table "modules"
"""
input modules_obj_rel_insert_input {
  data: modules_insert_input!
  on_conflict: modules_on_conflict
}

"""
on conflict condition type for table "modules"
"""
input modules_on_conflict {
  constraint: modules_constraint!
  update_columns: [modules_update_column!]!
  where: modules_bool_exp
}

"""
ordering options when selecting data from "modules"
"""
input modules_order_by {
  _id: order_by
  learning_units_aggregate: learning_unit_aggregate_order_by
  module_releases_aggregate: module_release_aggregate_order_by
  name: order_by
  objective: order_by
  thumbnail: order_by
}

"""
primary key columns input for table: "modules"
"""
input modules_pk_columns_input {
  _id: Int!
}

"""
select columns of table "modules"
"""
enum modules_select_column {
  """column name"""
  _id

  """column name"""
  name

  """column name"""
  objective

  """column name"""
  thumbnail
}

"""
input type for updating data in table "modules"
"""
input modules_set_input {
  _id: Int
  name: String
  objective: String
  thumbnail: String
}

"""aggregate stddev on columns"""
type modules_stddev_fields {
  _id: Float
}

"""
order by stddev() on columns of table "modules"
"""
input modules_stddev_order_by {
  _id: order_by
}

"""aggregate stddev_pop on columns"""
type modules_stddev_pop_fields {
  _id: Float
}

"""
order by stddev_pop() on columns of table "modules"
"""
input modules_stddev_pop_order_by {
  _id: order_by
}

"""aggregate stddev_samp on columns"""
type modules_stddev_samp_fields {
  _id: Float
}

"""
order by stddev_samp() on columns of table "modules"
"""
input modules_stddev_samp_order_by {
  _id: order_by
}

"""aggregate sum on columns"""
type modules_sum_fields {
  _id: Int
}

"""
order by sum() on columns of table "modules"
"""
input modules_sum_order_by {
  _id: order_by
}

"""
update columns of table "modules"
"""
enum modules_update_column {
  """column name"""
  _id

  """column name"""
  name

  """column name"""
  objective

  """column name"""
  thumbnail
}

"""aggregate var_pop on columns"""
type modules_var_pop_fields {
  _id: Float
}

"""
order by var_pop() on columns of table "modules"
"""
input modules_var_pop_order_by {
  _id: order_by
}

"""aggregate var_samp on columns"""
type modules_var_samp_fields {
  _id: Float
}

"""
order by var_samp() on columns of table "modules"
"""
input modules_var_samp_order_by {
  _id: order_by
}

"""aggregate variance on columns"""
type modules_variance_fields {
  _id: Float
}

"""
order by variance() on columns of table "modules"
"""
input modules_variance_order_by {
  _id: order_by
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "category"
  """
  delete_category(
    """filter the rows which have to be deleted"""
    where: category_bool_exp!
  ): category_mutation_response

  """
  delete single row from the table: "category"
  """
  delete_category_by_pk(_id: Int!): category

  """
  delete data from the table: "class"
  """
  delete_class(
    """filter the rows which have to be deleted"""
    where: class_bool_exp!
  ): class_mutation_response

  """
  delete single row from the table: "class"
  """
  delete_class_by_pk(_id: Int!): class

  """
  delete data from the table: "company"
  """
  delete_company(
    """filter the rows which have to be deleted"""
    where: company_bool_exp!
  ): company_mutation_response

  """
  delete single row from the table: "company"
  """
  delete_company_by_pk(_id: Int!): company

  """
  delete data from the table: "interest"
  """
  delete_interest(
    """filter the rows which have to be deleted"""
    where: interest_bool_exp!
  ): interest_mutation_response

  """
  delete single row from the table: "interest"
  """
  delete_interest_by_pk(id: Int!): interest

  """
  delete data from the table: "learning_unit"
  """
  delete_learning_unit(
    """filter the rows which have to be deleted"""
    where: learning_unit_bool_exp!
  ): learning_unit_mutation_response

  """
  delete single row from the table: "learning_unit"
  """
  delete_learning_unit_by_pk(_id: Int!): learning_unit

  """
  delete data from the table: "learning_unity_release"
  """
  delete_learning_unity_release(
    """filter the rows which have to be deleted"""
    where: learning_unity_release_bool_exp!
  ): learning_unity_release_mutation_response

  """
  delete single row from the table: "learning_unity_release"
  """
  delete_learning_unity_release_by_pk(_id: Int!): learning_unity_release

  """
  delete data from the table: "material"
  """
  delete_material(
    """filter the rows which have to be deleted"""
    where: material_bool_exp!
  ): material_mutation_response

  """
  delete single row from the table: "material"
  """
  delete_material_by_pk(_id: Int!): material

  """
  delete data from the table: "material_type"
  """
  delete_material_type(
    """filter the rows which have to be deleted"""
    where: material_type_bool_exp!
  ): material_type_mutation_response

  """
  delete single row from the table: "material_type"
  """
  delete_material_type_by_pk(_id: Int!): material_type

  """
  delete data from the table: "mentorship"
  """
  delete_mentorship(
    """filter the rows which have to be deleted"""
    where: mentorship_bool_exp!
  ): mentorship_mutation_response

  """
  delete single row from the table: "mentorship"
  """
  delete_mentorship_by_pk(_id: Int!): mentorship

  """
  delete data from the table: "module_release"
  """
  delete_module_release(
    """filter the rows which have to be deleted"""
    where: module_release_bool_exp!
  ): module_release_mutation_response

  """
  delete single row from the table: "module_release"
  """
  delete_module_release_by_pk(id: Int!): module_release

  """
  delete data from the table: "modules"
  """
  delete_modules(
    """filter the rows which have to be deleted"""
    where: modules_bool_exp!
  ): modules_mutation_response

  """
  delete single row from the table: "modules"
  """
  delete_modules_by_pk(_id: Int!): modules

  """
  delete data from the table: "related_material"
  """
  delete_related_material(
    """filter the rows which have to be deleted"""
    where: related_material_bool_exp!
  ): related_material_mutation_response

  """
  delete single row from the table: "related_material"
  """
  delete_related_material_by_pk(material_id: Int!, related_material_id: Int!): related_material

  """
  delete data from the table: "student"
  """
  delete_student(
    """filter the rows which have to be deleted"""
    where: student_bool_exp!
  ): student_mutation_response

  """
  delete data from the table: "student_assessment"
  """
  delete_student_assessment(
    """filter the rows which have to be deleted"""
    where: student_assessment_bool_exp!
  ): student_assessment_mutation_response

  """
  delete single row from the table: "student_assessment"
  """
  delete_student_assessment_by_pk(id: Int!): student_assessment

  """
  delete data from the table: "student_assessment_interest"
  """
  delete_student_assessment_interest(
    """filter the rows which have to be deleted"""
    where: student_assessment_interest_bool_exp!
  ): student_assessment_interest_mutation_response

  """
  delete single row from the table: "student_assessment_interest"
  """
  delete_student_assessment_interest_by_pk(id: Int!): student_assessment_interest

  """
  delete single row from the table: "student"
  """
  delete_student_by_pk(_id: Int!): student

  """
  delete data from the table: "student_material_favorite"
  """
  delete_student_material_favorite(
    """filter the rows which have to be deleted"""
    where: student_material_favorite_bool_exp!
  ): student_material_favorite_mutation_response

  """
  delete single row from the table: "student_material_favorite"
  """
  delete_student_material_favorite_by_pk(_id: Int!): student_material_favorite

  """
  delete data from the table: "student_material_history"
  """
  delete_student_material_history(
    """filter the rows which have to be deleted"""
    where: student_material_history_bool_exp!
  ): student_material_history_mutation_response

  """
  delete single row from the table: "student_material_history"
  """
  delete_student_material_history_by_pk(_id: Int!): student_material_history

  """
  delete data from the table: "tag"
  """
  delete_tag(
    """filter the rows which have to be deleted"""
    where: tag_bool_exp!
  ): tag_mutation_response

  """
  delete single row from the table: "tag"
  """
  delete_tag_by_pk(_id: Int!): tag

  """
  delete data from the table: "tags"
  """
  delete_tags(
    """filter the rows which have to be deleted"""
    where: tags_bool_exp!
  ): tags_mutation_response

  """
  delete single row from the table: "tags"
  """
  delete_tags_by_pk(id: Int!): tags

  """
  insert data into the table: "category"
  """
  insert_category(
    """the rows to be inserted"""
    objects: [category_insert_input!]!

    """on conflict condition"""
    on_conflict: category_on_conflict
  ): category_mutation_response

  """
  insert a single row into the table: "category"
  """
  insert_category_one(
    """the row to be inserted"""
    object: category_insert_input!

    """on conflict condition"""
    on_conflict: category_on_conflict
  ): category

  """
  insert data into the table: "class"
  """
  insert_class(
    """the rows to be inserted"""
    objects: [class_insert_input!]!

    """on conflict condition"""
    on_conflict: class_on_conflict
  ): class_mutation_response

  """
  insert a single row into the table: "class"
  """
  insert_class_one(
    """the row to be inserted"""
    object: class_insert_input!

    """on conflict condition"""
    on_conflict: class_on_conflict
  ): class

  """
  insert data into the table: "company"
  """
  insert_company(
    """the rows to be inserted"""
    objects: [company_insert_input!]!

    """on conflict condition"""
    on_conflict: company_on_conflict
  ): company_mutation_response

  """
  insert a single row into the table: "company"
  """
  insert_company_one(
    """the row to be inserted"""
    object: company_insert_input!

    """on conflict condition"""
    on_conflict: company_on_conflict
  ): company

  """
  insert data into the table: "interest"
  """
  insert_interest(
    """the rows to be inserted"""
    objects: [interest_insert_input!]!

    """on conflict condition"""
    on_conflict: interest_on_conflict
  ): interest_mutation_response

  """
  insert a single row into the table: "interest"
  """
  insert_interest_one(
    """the row to be inserted"""
    object: interest_insert_input!

    """on conflict condition"""
    on_conflict: interest_on_conflict
  ): interest

  """
  insert data into the table: "learning_unit"
  """
  insert_learning_unit(
    """the rows to be inserted"""
    objects: [learning_unit_insert_input!]!

    """on conflict condition"""
    on_conflict: learning_unit_on_conflict
  ): learning_unit_mutation_response

  """
  insert a single row into the table: "learning_unit"
  """
  insert_learning_unit_one(
    """the row to be inserted"""
    object: learning_unit_insert_input!

    """on conflict condition"""
    on_conflict: learning_unit_on_conflict
  ): learning_unit

  """
  insert data into the table: "learning_unity_release"
  """
  insert_learning_unity_release(
    """the rows to be inserted"""
    objects: [learning_unity_release_insert_input!]!

    """on conflict condition"""
    on_conflict: learning_unity_release_on_conflict
  ): learning_unity_release_mutation_response

  """
  insert a single row into the table: "learning_unity_release"
  """
  insert_learning_unity_release_one(
    """the row to be inserted"""
    object: learning_unity_release_insert_input!

    """on conflict condition"""
    on_conflict: learning_unity_release_on_conflict
  ): learning_unity_release

  """
  insert data into the table: "material"
  """
  insert_material(
    """the rows to be inserted"""
    objects: [material_insert_input!]!

    """on conflict condition"""
    on_conflict: material_on_conflict
  ): material_mutation_response

  """
  insert a single row into the table: "material"
  """
  insert_material_one(
    """the row to be inserted"""
    object: material_insert_input!

    """on conflict condition"""
    on_conflict: material_on_conflict
  ): material

  """
  insert data into the table: "material_type"
  """
  insert_material_type(
    """the rows to be inserted"""
    objects: [material_type_insert_input!]!

    """on conflict condition"""
    on_conflict: material_type_on_conflict
  ): material_type_mutation_response

  """
  insert a single row into the table: "material_type"
  """
  insert_material_type_one(
    """the row to be inserted"""
    object: material_type_insert_input!

    """on conflict condition"""
    on_conflict: material_type_on_conflict
  ): material_type

  """
  insert data into the table: "mentorship"
  """
  insert_mentorship(
    """the rows to be inserted"""
    objects: [mentorship_insert_input!]!

    """on conflict condition"""
    on_conflict: mentorship_on_conflict
  ): mentorship_mutation_response

  """
  insert a single row into the table: "mentorship"
  """
  insert_mentorship_one(
    """the row to be inserted"""
    object: mentorship_insert_input!

    """on conflict condition"""
    on_conflict: mentorship_on_conflict
  ): mentorship

  """
  insert data into the table: "module_release"
  """
  insert_module_release(
    """the rows to be inserted"""
    objects: [module_release_insert_input!]!

    """on conflict condition"""
    on_conflict: module_release_on_conflict
  ): module_release_mutation_response

  """
  insert a single row into the table: "module_release"
  """
  insert_module_release_one(
    """the row to be inserted"""
    object: module_release_insert_input!

    """on conflict condition"""
    on_conflict: module_release_on_conflict
  ): module_release

  """
  insert data into the table: "modules"
  """
  insert_modules(
    """the rows to be inserted"""
    objects: [modules_insert_input!]!

    """on conflict condition"""
    on_conflict: modules_on_conflict
  ): modules_mutation_response

  """
  insert a single row into the table: "modules"
  """
  insert_modules_one(
    """the row to be inserted"""
    object: modules_insert_input!

    """on conflict condition"""
    on_conflict: modules_on_conflict
  ): modules

  """
  insert data into the table: "related_material"
  """
  insert_related_material(
    """the rows to be inserted"""
    objects: [related_material_insert_input!]!

    """on conflict condition"""
    on_conflict: related_material_on_conflict
  ): related_material_mutation_response

  """
  insert a single row into the table: "related_material"
  """
  insert_related_material_one(
    """the row to be inserted"""
    object: related_material_insert_input!

    """on conflict condition"""
    on_conflict: related_material_on_conflict
  ): related_material

  """
  insert data into the table: "student"
  """
  insert_student(
    """the rows to be inserted"""
    objects: [student_insert_input!]!

    """on conflict condition"""
    on_conflict: student_on_conflict
  ): student_mutation_response

  """
  insert data into the table: "student_assessment"
  """
  insert_student_assessment(
    """the rows to be inserted"""
    objects: [student_assessment_insert_input!]!

    """on conflict condition"""
    on_conflict: student_assessment_on_conflict
  ): student_assessment_mutation_response

  """
  insert data into the table: "student_assessment_interest"
  """
  insert_student_assessment_interest(
    """the rows to be inserted"""
    objects: [student_assessment_interest_insert_input!]!

    """on conflict condition"""
    on_conflict: student_assessment_interest_on_conflict
  ): student_assessment_interest_mutation_response

  """
  insert a single row into the table: "student_assessment_interest"
  """
  insert_student_assessment_interest_one(
    """the row to be inserted"""
    object: student_assessment_interest_insert_input!

    """on conflict condition"""
    on_conflict: student_assessment_interest_on_conflict
  ): student_assessment_interest

  """
  insert a single row into the table: "student_assessment"
  """
  insert_student_assessment_one(
    """the row to be inserted"""
    object: student_assessment_insert_input!

    """on conflict condition"""
    on_conflict: student_assessment_on_conflict
  ): student_assessment

  """
  insert data into the table: "student_material_favorite"
  """
  insert_student_material_favorite(
    """the rows to be inserted"""
    objects: [student_material_favorite_insert_input!]!

    """on conflict condition"""
    on_conflict: student_material_favorite_on_conflict
  ): student_material_favorite_mutation_response

  """
  insert a single row into the table: "student_material_favorite"
  """
  insert_student_material_favorite_one(
    """the row to be inserted"""
    object: student_material_favorite_insert_input!

    """on conflict condition"""
    on_conflict: student_material_favorite_on_conflict
  ): student_material_favorite

  """
  insert data into the table: "student_material_history"
  """
  insert_student_material_history(
    """the rows to be inserted"""
    objects: [student_material_history_insert_input!]!

    """on conflict condition"""
    on_conflict: student_material_history_on_conflict
  ): student_material_history_mutation_response

  """
  insert a single row into the table: "student_material_history"
  """
  insert_student_material_history_one(
    """the row to be inserted"""
    object: student_material_history_insert_input!

    """on conflict condition"""
    on_conflict: student_material_history_on_conflict
  ): student_material_history

  """
  insert a single row into the table: "student"
  """
  insert_student_one(
    """the row to be inserted"""
    object: student_insert_input!

    """on conflict condition"""
    on_conflict: student_on_conflict
  ): student

  """
  insert data into the table: "tag"
  """
  insert_tag(
    """the rows to be inserted"""
    objects: [tag_insert_input!]!

    """on conflict condition"""
    on_conflict: tag_on_conflict
  ): tag_mutation_response

  """
  insert a single row into the table: "tag"
  """
  insert_tag_one(
    """the row to be inserted"""
    object: tag_insert_input!

    """on conflict condition"""
    on_conflict: tag_on_conflict
  ): tag

  """
  insert data into the table: "tags"
  """
  insert_tags(
    """the rows to be inserted"""
    objects: [tags_insert_input!]!

    """on conflict condition"""
    on_conflict: tags_on_conflict
  ): tags_mutation_response

  """
  insert a single row into the table: "tags"
  """
  insert_tags_one(
    """the row to be inserted"""
    object: tags_insert_input!

    """on conflict condition"""
    on_conflict: tags_on_conflict
  ): tags

  """
  update data of the table: "category"
  """
  update_category(
    """increments the integer columns with given value of the filtered values"""
    _inc: category_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: category_set_input

    """filter the rows which have to be updated"""
    where: category_bool_exp!
  ): category_mutation_response

  """
  update single row of the table: "category"
  """
  update_category_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: category_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: category_set_input
    pk_columns: category_pk_columns_input!
  ): category

  """
  update data of the table: "class"
  """
  update_class(
    """increments the integer columns with given value of the filtered values"""
    _inc: class_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: class_set_input

    """filter the rows which have to be updated"""
    where: class_bool_exp!
  ): class_mutation_response

  """
  update single row of the table: "class"
  """
  update_class_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: class_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: class_set_input
    pk_columns: class_pk_columns_input!
  ): class

  """
  update data of the table: "company"
  """
  update_company(
    """increments the integer columns with given value of the filtered values"""
    _inc: company_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: company_set_input

    """filter the rows which have to be updated"""
    where: company_bool_exp!
  ): company_mutation_response

  """
  update single row of the table: "company"
  """
  update_company_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: company_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: company_set_input
    pk_columns: company_pk_columns_input!
  ): company

  """
  update data of the table: "interest"
  """
  update_interest(
    """increments the integer columns with given value of the filtered values"""
    _inc: interest_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: interest_set_input

    """filter the rows which have to be updated"""
    where: interest_bool_exp!
  ): interest_mutation_response

  """
  update single row of the table: "interest"
  """
  update_interest_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: interest_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: interest_set_input
    pk_columns: interest_pk_columns_input!
  ): interest

  """
  update data of the table: "learning_unit"
  """
  update_learning_unit(
    """increments the integer columns with given value of the filtered values"""
    _inc: learning_unit_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: learning_unit_set_input

    """filter the rows which have to be updated"""
    where: learning_unit_bool_exp!
  ): learning_unit_mutation_response

  """
  update single row of the table: "learning_unit"
  """
  update_learning_unit_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: learning_unit_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: learning_unit_set_input
    pk_columns: learning_unit_pk_columns_input!
  ): learning_unit

  """
  update data of the table: "learning_unity_release"
  """
  update_learning_unity_release(
    """increments the integer columns with given value of the filtered values"""
    _inc: learning_unity_release_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: learning_unity_release_set_input

    """filter the rows which have to be updated"""
    where: learning_unity_release_bool_exp!
  ): learning_unity_release_mutation_response

  """
  update single row of the table: "learning_unity_release"
  """
  update_learning_unity_release_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: learning_unity_release_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: learning_unity_release_set_input
    pk_columns: learning_unity_release_pk_columns_input!
  ): learning_unity_release

  """
  update data of the table: "material"
  """
  update_material(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: material_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: material_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from
    the end). throws an error if top level container is not an array
    """
    _delete_elem: material_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: material_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: material_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: material_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: material_set_input

    """filter the rows which have to be updated"""
    where: material_bool_exp!
  ): material_mutation_response

  """
  update single row of the table: "material"
  """
  update_material_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: material_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: material_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from
    the end). throws an error if top level container is not an array
    """
    _delete_elem: material_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: material_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: material_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: material_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: material_set_input
    pk_columns: material_pk_columns_input!
  ): material

  """
  update data of the table: "material_type"
  """
  update_material_type(
    """increments the integer columns with given value of the filtered values"""
    _inc: material_type_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: material_type_set_input

    """filter the rows which have to be updated"""
    where: material_type_bool_exp!
  ): material_type_mutation_response

  """
  update single row of the table: "material_type"
  """
  update_material_type_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: material_type_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: material_type_set_input
    pk_columns: material_type_pk_columns_input!
  ): material_type

  """
  update data of the table: "mentorship"
  """
  update_mentorship(
    """increments the integer columns with given value of the filtered values"""
    _inc: mentorship_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mentorship_set_input

    """filter the rows which have to be updated"""
    where: mentorship_bool_exp!
  ): mentorship_mutation_response

  """
  update single row of the table: "mentorship"
  """
  update_mentorship_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: mentorship_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: mentorship_set_input
    pk_columns: mentorship_pk_columns_input!
  ): mentorship

  """
  update data of the table: "module_release"
  """
  update_module_release(
    """increments the integer columns with given value of the filtered values"""
    _inc: module_release_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: module_release_set_input

    """filter the rows which have to be updated"""
    where: module_release_bool_exp!
  ): module_release_mutation_response

  """
  update single row of the table: "module_release"
  """
  update_module_release_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: module_release_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: module_release_set_input
    pk_columns: module_release_pk_columns_input!
  ): module_release

  """
  update data of the table: "modules"
  """
  update_modules(
    """increments the integer columns with given value of the filtered values"""
    _inc: modules_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: modules_set_input

    """filter the rows which have to be updated"""
    where: modules_bool_exp!
  ): modules_mutation_response

  """
  update single row of the table: "modules"
  """
  update_modules_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: modules_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: modules_set_input
    pk_columns: modules_pk_columns_input!
  ): modules

  """
  update data of the table: "related_material"
  """
  update_related_material(
    """increments the integer columns with given value of the filtered values"""
    _inc: related_material_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: related_material_set_input

    """filter the rows which have to be updated"""
    where: related_material_bool_exp!
  ): related_material_mutation_response

  """
  update single row of the table: "related_material"
  """
  update_related_material_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: related_material_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: related_material_set_input
    pk_columns: related_material_pk_columns_input!
  ): related_material

  """
  update data of the table: "student"
  """
  update_student(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_set_input

    """filter the rows which have to be updated"""
    where: student_bool_exp!
  ): student_mutation_response

  """
  update data of the table: "student_assessment"
  """
  update_student_assessment(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_assessment_set_input

    """filter the rows which have to be updated"""
    where: student_assessment_bool_exp!
  ): student_assessment_mutation_response

  """
  update single row of the table: "student_assessment"
  """
  update_student_assessment_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_assessment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_assessment_set_input
    pk_columns: student_assessment_pk_columns_input!
  ): student_assessment

  """
  update data of the table: "student_assessment_interest"
  """
  update_student_assessment_interest(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_assessment_interest_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_assessment_interest_set_input

    """filter the rows which have to be updated"""
    where: student_assessment_interest_bool_exp!
  ): student_assessment_interest_mutation_response

  """
  update single row of the table: "student_assessment_interest"
  """
  update_student_assessment_interest_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_assessment_interest_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_assessment_interest_set_input
    pk_columns: student_assessment_interest_pk_columns_input!
  ): student_assessment_interest

  """
  update single row of the table: "student"
  """
  update_student_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_set_input
    pk_columns: student_pk_columns_input!
  ): student

  """
  update data of the table: "student_material_favorite"
  """
  update_student_material_favorite(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_material_favorite_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_material_favorite_set_input

    """filter the rows which have to be updated"""
    where: student_material_favorite_bool_exp!
  ): student_material_favorite_mutation_response

  """
  update single row of the table: "student_material_favorite"
  """
  update_student_material_favorite_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_material_favorite_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_material_favorite_set_input
    pk_columns: student_material_favorite_pk_columns_input!
  ): student_material_favorite

  """
  update data of the table: "student_material_history"
  """
  update_student_material_history(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_material_history_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_material_history_set_input

    """filter the rows which have to be updated"""
    where: student_material_history_bool_exp!
  ): student_material_history_mutation_response

  """
  update single row of the table: "student_material_history"
  """
  update_student_material_history_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_material_history_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_material_history_set_input
    pk_columns: student_material_history_pk_columns_input!
  ): student_material_history

  """
  update data of the table: "tag"
  """
  update_tag(
    """increments the integer columns with given value of the filtered values"""
    _inc: tag_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: tag_set_input

    """filter the rows which have to be updated"""
    where: tag_bool_exp!
  ): tag_mutation_response

  """
  update single row of the table: "tag"
  """
  update_tag_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: tag_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: tag_set_input
    pk_columns: tag_pk_columns_input!
  ): tag

  """
  update data of the table: "tags"
  """
  update_tags(
    """increments the integer columns with given value of the filtered values"""
    _inc: tags_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: tags_set_input

    """filter the rows which have to be updated"""
    where: tags_bool_exp!
  ): tags_mutation_response

  """
  update single row of the table: "tags"
  """
  update_tags_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: tags_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: tags_set_input
    pk_columns: tags_pk_columns_input!
  ): tags
}

scalar numeric

"""
expression to compare columns of type numeric. All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""query root"""
type query_root {
  """
  fetch data from the table: "category"
  """
  category(
    """distinct select on columns"""
    distinct_on: [category_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [category_order_by!]

    """filter the rows returned"""
    where: category_bool_exp
  ): [category!]!

  """
  fetch aggregated fields from the table: "category"
  """
  category_aggregate(
    """distinct select on columns"""
    distinct_on: [category_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [category_order_by!]

    """filter the rows returned"""
    where: category_bool_exp
  ): category_aggregate!

  """fetch data from the table: "category" using primary key columns"""
  category_by_pk(_id: Int!): category

  """
  fetch data from the table: "class"
  """
  class(
    """distinct select on columns"""
    distinct_on: [class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_order_by!]

    """filter the rows returned"""
    where: class_bool_exp
  ): [class!]!

  """
  fetch aggregated fields from the table: "class"
  """
  class_aggregate(
    """distinct select on columns"""
    distinct_on: [class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_order_by!]

    """filter the rows returned"""
    where: class_bool_exp
  ): class_aggregate!

  """fetch data from the table: "class" using primary key columns"""
  class_by_pk(_id: Int!): class

  """
  fetch data from the table: "company"
  """
  company(
    """distinct select on columns"""
    distinct_on: [company_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [company_order_by!]

    """filter the rows returned"""
    where: company_bool_exp
  ): [company!]!

  """
  fetch aggregated fields from the table: "company"
  """
  company_aggregate(
    """distinct select on columns"""
    distinct_on: [company_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [company_order_by!]

    """filter the rows returned"""
    where: company_bool_exp
  ): company_aggregate!

  """fetch data from the table: "company" using primary key columns"""
  company_by_pk(_id: Int!): company

  """
  fetch data from the table: "interest"
  """
  interest(
    """distinct select on columns"""
    distinct_on: [interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [interest_order_by!]

    """filter the rows returned"""
    where: interest_bool_exp
  ): [interest!]!

  """
  fetch aggregated fields from the table: "interest"
  """
  interest_aggregate(
    """distinct select on columns"""
    distinct_on: [interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [interest_order_by!]

    """filter the rows returned"""
    where: interest_bool_exp
  ): interest_aggregate!

  """fetch data from the table: "interest" using primary key columns"""
  interest_by_pk(id: Int!): interest

  """
  fetch data from the table: "learning_unit"
  """
  learning_unit(
    """distinct select on columns"""
    distinct_on: [learning_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unit_order_by!]

    """filter the rows returned"""
    where: learning_unit_bool_exp
  ): [learning_unit!]!

  """
  fetch aggregated fields from the table: "learning_unit"
  """
  learning_unit_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unit_order_by!]

    """filter the rows returned"""
    where: learning_unit_bool_exp
  ): learning_unit_aggregate!

  """fetch data from the table: "learning_unit" using primary key columns"""
  learning_unit_by_pk(_id: Int!): learning_unit

  """
  fetch data from the table: "learning_unity_release"
  """
  learning_unity_release(
    """distinct select on columns"""
    distinct_on: [learning_unity_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unity_release_order_by!]

    """filter the rows returned"""
    where: learning_unity_release_bool_exp
  ): [learning_unity_release!]!

  """
  fetch aggregated fields from the table: "learning_unity_release"
  """
  learning_unity_release_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_unity_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unity_release_order_by!]

    """filter the rows returned"""
    where: learning_unity_release_bool_exp
  ): learning_unity_release_aggregate!

  """
  fetch data from the table: "learning_unity_release" using primary key columns
  """
  learning_unity_release_by_pk(_id: Int!): learning_unity_release

  """
  fetch data from the table: "material"
  """
  material(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): [material!]!

  """
  fetch aggregated fields from the table: "material"
  """
  material_aggregate(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): material_aggregate!

  """fetch data from the table: "material" using primary key columns"""
  material_by_pk(_id: Int!): material

  """
  fetch data from the table: "material_type"
  """
  material_type(
    """distinct select on columns"""
    distinct_on: [material_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_type_order_by!]

    """filter the rows returned"""
    where: material_type_bool_exp
  ): [material_type!]!

  """
  fetch aggregated fields from the table: "material_type"
  """
  material_type_aggregate(
    """distinct select on columns"""
    distinct_on: [material_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_type_order_by!]

    """filter the rows returned"""
    where: material_type_bool_exp
  ): material_type_aggregate!

  """fetch data from the table: "material_type" using primary key columns"""
  material_type_by_pk(_id: Int!): material_type

  """
  fetch data from the table: "mentorship"
  """
  mentorship(
    """distinct select on columns"""
    distinct_on: [mentorship_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mentorship_order_by!]

    """filter the rows returned"""
    where: mentorship_bool_exp
  ): [mentorship!]!

  """
  fetch aggregated fields from the table: "mentorship"
  """
  mentorship_aggregate(
    """distinct select on columns"""
    distinct_on: [mentorship_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mentorship_order_by!]

    """filter the rows returned"""
    where: mentorship_bool_exp
  ): mentorship_aggregate!

  """fetch data from the table: "mentorship" using primary key columns"""
  mentorship_by_pk(_id: Int!): mentorship

  """
  fetch data from the table: "module_release"
  """
  module_release(
    """distinct select on columns"""
    distinct_on: [module_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [module_release_order_by!]

    """filter the rows returned"""
    where: module_release_bool_exp
  ): [module_release!]!

  """
  fetch aggregated fields from the table: "module_release"
  """
  module_release_aggregate(
    """distinct select on columns"""
    distinct_on: [module_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [module_release_order_by!]

    """filter the rows returned"""
    where: module_release_bool_exp
  ): module_release_aggregate!

  """fetch data from the table: "module_release" using primary key columns"""
  module_release_by_pk(id: Int!): module_release

  """
  fetch data from the table: "modules"
  """
  modules(
    """distinct select on columns"""
    distinct_on: [modules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [modules_order_by!]

    """filter the rows returned"""
    where: modules_bool_exp
  ): [modules!]!

  """
  fetch aggregated fields from the table: "modules"
  """
  modules_aggregate(
    """distinct select on columns"""
    distinct_on: [modules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [modules_order_by!]

    """filter the rows returned"""
    where: modules_bool_exp
  ): modules_aggregate!

  """fetch data from the table: "modules" using primary key columns"""
  modules_by_pk(_id: Int!): modules

  """
  fetch data from the table: "related_material"
  """
  related_material(
    """distinct select on columns"""
    distinct_on: [related_material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [related_material_order_by!]

    """filter the rows returned"""
    where: related_material_bool_exp
  ): [related_material!]!

  """
  fetch aggregated fields from the table: "related_material"
  """
  related_material_aggregate(
    """distinct select on columns"""
    distinct_on: [related_material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [related_material_order_by!]

    """filter the rows returned"""
    where: related_material_bool_exp
  ): related_material_aggregate!

  """
  fetch data from the table: "related_material" using primary key columns
  """
  related_material_by_pk(material_id: Int!, related_material_id: Int!): related_material

  """
  fetch data from the table: "student"
  """
  student(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): [student!]!

  """
  fetch aggregated fields from the table: "student"
  """
  student_aggregate(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): student_aggregate!

  """
  fetch data from the table: "student_assessment"
  """
  student_assessment(
    """distinct select on columns"""
    distinct_on: [student_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_order_by!]

    """filter the rows returned"""
    where: student_assessment_bool_exp
  ): [student_assessment!]!

  """
  fetch aggregated fields from the table: "student_assessment"
  """
  student_assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [student_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_order_by!]

    """filter the rows returned"""
    where: student_assessment_bool_exp
  ): student_assessment_aggregate!

  """
  fetch data from the table: "student_assessment" using primary key columns
  """
  student_assessment_by_pk(id: Int!): student_assessment

  """
  fetch data from the table: "student_assessment_interest"
  """
  student_assessment_interest(
    """distinct select on columns"""
    distinct_on: [student_assessment_interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_interest_order_by!]

    """filter the rows returned"""
    where: student_assessment_interest_bool_exp
  ): [student_assessment_interest!]!

  """
  fetch aggregated fields from the table: "student_assessment_interest"
  """
  student_assessment_interest_aggregate(
    """distinct select on columns"""
    distinct_on: [student_assessment_interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_interest_order_by!]

    """filter the rows returned"""
    where: student_assessment_interest_bool_exp
  ): student_assessment_interest_aggregate!

  """
  fetch data from the table: "student_assessment_interest" using primary key columns
  """
  student_assessment_interest_by_pk(id: Int!): student_assessment_interest

  """fetch data from the table: "student" using primary key columns"""
  student_by_pk(_id: Int!): student

  """
  fetch data from the table: "student_material_favorite"
  """
  student_material_favorite(
    """distinct select on columns"""
    distinct_on: [student_material_favorite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_favorite_order_by!]

    """filter the rows returned"""
    where: student_material_favorite_bool_exp
  ): [student_material_favorite!]!

  """
  fetch aggregated fields from the table: "student_material_favorite"
  """
  student_material_favorite_aggregate(
    """distinct select on columns"""
    distinct_on: [student_material_favorite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_favorite_order_by!]

    """filter the rows returned"""
    where: student_material_favorite_bool_exp
  ): student_material_favorite_aggregate!

  """
  fetch data from the table: "student_material_favorite" using primary key columns
  """
  student_material_favorite_by_pk(_id: Int!): student_material_favorite

  """
  fetch data from the table: "student_material_history"
  """
  student_material_history(
    """distinct select on columns"""
    distinct_on: [student_material_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_history_order_by!]

    """filter the rows returned"""
    where: student_material_history_bool_exp
  ): [student_material_history!]!

  """
  fetch aggregated fields from the table: "student_material_history"
  """
  student_material_history_aggregate(
    """distinct select on columns"""
    distinct_on: [student_material_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_history_order_by!]

    """filter the rows returned"""
    where: student_material_history_bool_exp
  ): student_material_history_aggregate!

  """
  fetch data from the table: "student_material_history" using primary key columns
  """
  student_material_history_by_pk(_id: Int!): student_material_history

  """
  fetch data from the table: "tag"
  """
  tag(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """
  fetch aggregated fields from the table: "tag"
  """
  tag_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """fetch data from the table: "tag" using primary key columns"""
  tag_by_pk(_id: Int!): tag

  """
  fetch data from the table: "tags"
  """
  tags(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """
  fetch aggregated fields from the table: "tags"
  """
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): tags_aggregate!

  """fetch data from the table: "tags" using primary key columns"""
  tags_by_pk(id: Int!): tags
}

"""
columns and relationships of "related_material"
"""
type related_material {
  material_id: Int!
  related_material_id: Int!
}

"""
aggregated selection of "related_material"
"""
type related_material_aggregate {
  aggregate: related_material_aggregate_fields
  nodes: [related_material!]!
}

"""
aggregate fields of "related_material"
"""
type related_material_aggregate_fields {
  avg: related_material_avg_fields
  count(columns: [related_material_select_column!], distinct: Boolean): Int
  max: related_material_max_fields
  min: related_material_min_fields
  stddev: related_material_stddev_fields
  stddev_pop: related_material_stddev_pop_fields
  stddev_samp: related_material_stddev_samp_fields
  sum: related_material_sum_fields
  var_pop: related_material_var_pop_fields
  var_samp: related_material_var_samp_fields
  variance: related_material_variance_fields
}

"""
order by aggregate values of table "related_material"
"""
input related_material_aggregate_order_by {
  avg: related_material_avg_order_by
  count: order_by
  max: related_material_max_order_by
  min: related_material_min_order_by
  stddev: related_material_stddev_order_by
  stddev_pop: related_material_stddev_pop_order_by
  stddev_samp: related_material_stddev_samp_order_by
  sum: related_material_sum_order_by
  var_pop: related_material_var_pop_order_by
  var_samp: related_material_var_samp_order_by
  variance: related_material_variance_order_by
}

"""
input type for inserting array relation for remote table "related_material"
"""
input related_material_arr_rel_insert_input {
  data: [related_material_insert_input!]!
  on_conflict: related_material_on_conflict
}

"""aggregate avg on columns"""
type related_material_avg_fields {
  material_id: Float
  related_material_id: Float
}

"""
order by avg() on columns of table "related_material"
"""
input related_material_avg_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""
Boolean expression to filter rows from the table "related_material". All fields are combined with a logical 'AND'.
"""
input related_material_bool_exp {
  _and: [related_material_bool_exp]
  _not: related_material_bool_exp
  _or: [related_material_bool_exp]
  material_id: Int_comparison_exp
  related_material_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "related_material"
"""
enum related_material_constraint {
  """unique or primary key constraint"""
  related_material_pkey
}

"""
input type for incrementing integer column in table "related_material"
"""
input related_material_inc_input {
  material_id: Int
  related_material_id: Int
}

"""
input type for inserting data into table "related_material"
"""
input related_material_insert_input {
  material_id: Int
  related_material_id: Int
}

"""aggregate max on columns"""
type related_material_max_fields {
  material_id: Int
  related_material_id: Int
}

"""
order by max() on columns of table "related_material"
"""
input related_material_max_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""aggregate min on columns"""
type related_material_min_fields {
  material_id: Int
  related_material_id: Int
}

"""
order by min() on columns of table "related_material"
"""
input related_material_min_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""
response of any mutation on the table "related_material"
"""
type related_material_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [related_material!]!
}

"""
input type for inserting object relation for remote table "related_material"
"""
input related_material_obj_rel_insert_input {
  data: related_material_insert_input!
  on_conflict: related_material_on_conflict
}

"""
on conflict condition type for table "related_material"
"""
input related_material_on_conflict {
  constraint: related_material_constraint!
  update_columns: [related_material_update_column!]!
  where: related_material_bool_exp
}

"""
ordering options when selecting data from "related_material"
"""
input related_material_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""
primary key columns input for table: "related_material"
"""
input related_material_pk_columns_input {
  material_id: Int!
  related_material_id: Int!
}

"""
select columns of table "related_material"
"""
enum related_material_select_column {
  """column name"""
  material_id

  """column name"""
  related_material_id
}

"""
input type for updating data in table "related_material"
"""
input related_material_set_input {
  material_id: Int
  related_material_id: Int
}

"""aggregate stddev on columns"""
type related_material_stddev_fields {
  material_id: Float
  related_material_id: Float
}

"""
order by stddev() on columns of table "related_material"
"""
input related_material_stddev_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""aggregate stddev_pop on columns"""
type related_material_stddev_pop_fields {
  material_id: Float
  related_material_id: Float
}

"""
order by stddev_pop() on columns of table "related_material"
"""
input related_material_stddev_pop_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""aggregate stddev_samp on columns"""
type related_material_stddev_samp_fields {
  material_id: Float
  related_material_id: Float
}

"""
order by stddev_samp() on columns of table "related_material"
"""
input related_material_stddev_samp_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""aggregate sum on columns"""
type related_material_sum_fields {
  material_id: Int
  related_material_id: Int
}

"""
order by sum() on columns of table "related_material"
"""
input related_material_sum_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""
update columns of table "related_material"
"""
enum related_material_update_column {
  """column name"""
  material_id

  """column name"""
  related_material_id
}

"""aggregate var_pop on columns"""
type related_material_var_pop_fields {
  material_id: Float
  related_material_id: Float
}

"""
order by var_pop() on columns of table "related_material"
"""
input related_material_var_pop_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""aggregate var_samp on columns"""
type related_material_var_samp_fields {
  material_id: Float
  related_material_id: Float
}

"""
order by var_samp() on columns of table "related_material"
"""
input related_material_var_samp_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""aggregate variance on columns"""
type related_material_variance_fields {
  material_id: Float
  related_material_id: Float
}

"""
order by variance() on columns of table "related_material"
"""
input related_material_variance_order_by {
  material_id: order_by
  related_material_id: order_by
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _nlike: String
  _nsimilar: String
  _similar: String
}

"""
columns and relationships of "student"
"""
type student {
  _id: Int!
  category: String!
  class: Int

  """An object relationship"""
  classByClass: class

  """An object relationship"""
  company: company!
  company_id: Int!
  cpf: String
  date_of_birth: date!
  department: String!
  email: String!
  firebase_id: String
  hash_code: String
  last_name: String!
  name: String!
  office: String!
  schooling: String!

  """An array relationship"""
  student_assessment_interests(
    """distinct select on columns"""
    distinct_on: [student_assessment_interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_interest_order_by!]

    """filter the rows returned"""
    where: student_assessment_interest_bool_exp
  ): [student_assessment_interest!]!

  """An aggregated array relationship"""
  student_assessment_interests_aggregate(
    """distinct select on columns"""
    distinct_on: [student_assessment_interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_interest_order_by!]

    """filter the rows returned"""
    where: student_assessment_interest_bool_exp
  ): student_assessment_interest_aggregate!

  """An array relationship"""
  student_assessments(
    """distinct select on columns"""
    distinct_on: [student_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_order_by!]

    """filter the rows returned"""
    where: student_assessment_bool_exp
  ): [student_assessment!]!

  """An aggregated array relationship"""
  student_assessments_aggregate(
    """distinct select on columns"""
    distinct_on: [student_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_order_by!]

    """filter the rows returned"""
    where: student_assessment_bool_exp
  ): student_assessment_aggregate!

  """An array relationship"""
  student_material_favorites(
    """distinct select on columns"""
    distinct_on: [student_material_favorite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_favorite_order_by!]

    """filter the rows returned"""
    where: student_material_favorite_bool_exp
  ): [student_material_favorite!]!

  """An aggregated array relationship"""
  student_material_favorites_aggregate(
    """distinct select on columns"""
    distinct_on: [student_material_favorite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_favorite_order_by!]

    """filter the rows returned"""
    where: student_material_favorite_bool_exp
  ): student_material_favorite_aggregate!

  """An array relationship"""
  student_material_histories(
    """distinct select on columns"""
    distinct_on: [student_material_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_history_order_by!]

    """filter the rows returned"""
    where: student_material_history_bool_exp
  ): [student_material_history!]!

  """An aggregated array relationship"""
  student_material_histories_aggregate(
    """distinct select on columns"""
    distinct_on: [student_material_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_history_order_by!]

    """filter the rows returned"""
    where: student_material_history_bool_exp
  ): student_material_history_aggregate!
  sub_category: String!
  telephone: numeric!
}

"""
aggregated selection of "student"
"""
type student_aggregate {
  aggregate: student_aggregate_fields
  nodes: [student!]!
}

"""
aggregate fields of "student"
"""
type student_aggregate_fields {
  avg: student_avg_fields
  count(columns: [student_select_column!], distinct: Boolean): Int
  max: student_max_fields
  min: student_min_fields
  stddev: student_stddev_fields
  stddev_pop: student_stddev_pop_fields
  stddev_samp: student_stddev_samp_fields
  sum: student_sum_fields
  var_pop: student_var_pop_fields
  var_samp: student_var_samp_fields
  variance: student_variance_fields
}

"""
order by aggregate values of table "student"
"""
input student_aggregate_order_by {
  avg: student_avg_order_by
  count: order_by
  max: student_max_order_by
  min: student_min_order_by
  stddev: student_stddev_order_by
  stddev_pop: student_stddev_pop_order_by
  stddev_samp: student_stddev_samp_order_by
  sum: student_sum_order_by
  var_pop: student_var_pop_order_by
  var_samp: student_var_samp_order_by
  variance: student_variance_order_by
}

"""
input type for inserting array relation for remote table "student"
"""
input student_arr_rel_insert_input {
  data: [student_insert_input!]!
  on_conflict: student_on_conflict
}

"""
columns and relationships of "student_assessment"
"""
type student_assessment {
  id: Int!

  """An object relationship"""
  student: student!
  student_id: Int!
  weekly_goal: Int
}

"""
aggregated selection of "student_assessment"
"""
type student_assessment_aggregate {
  aggregate: student_assessment_aggregate_fields
  nodes: [student_assessment!]!
}

"""
aggregate fields of "student_assessment"
"""
type student_assessment_aggregate_fields {
  avg: student_assessment_avg_fields
  count(columns: [student_assessment_select_column!], distinct: Boolean): Int
  max: student_assessment_max_fields
  min: student_assessment_min_fields
  stddev: student_assessment_stddev_fields
  stddev_pop: student_assessment_stddev_pop_fields
  stddev_samp: student_assessment_stddev_samp_fields
  sum: student_assessment_sum_fields
  var_pop: student_assessment_var_pop_fields
  var_samp: student_assessment_var_samp_fields
  variance: student_assessment_variance_fields
}

"""
order by aggregate values of table "student_assessment"
"""
input student_assessment_aggregate_order_by {
  avg: student_assessment_avg_order_by
  count: order_by
  max: student_assessment_max_order_by
  min: student_assessment_min_order_by
  stddev: student_assessment_stddev_order_by
  stddev_pop: student_assessment_stddev_pop_order_by
  stddev_samp: student_assessment_stddev_samp_order_by
  sum: student_assessment_sum_order_by
  var_pop: student_assessment_var_pop_order_by
  var_samp: student_assessment_var_samp_order_by
  variance: student_assessment_variance_order_by
}

"""
input type for inserting array relation for remote table "student_assessment"
"""
input student_assessment_arr_rel_insert_input {
  data: [student_assessment_insert_input!]!
  on_conflict: student_assessment_on_conflict
}

"""aggregate avg on columns"""
type student_assessment_avg_fields {
  id: Float
  student_id: Float
  weekly_goal: Float
}

"""
order by avg() on columns of table "student_assessment"
"""
input student_assessment_avg_order_by {
  id: order_by
  student_id: order_by
  weekly_goal: order_by
}

"""
Boolean expression to filter rows from the table "student_assessment". All fields are combined with a logical 'AND'.
"""
input student_assessment_bool_exp {
  _and: [student_assessment_bool_exp]
  _not: student_assessment_bool_exp
  _or: [student_assessment_bool_exp]
  id: Int_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
  weekly_goal: Int_comparison_exp
}

"""
unique or primary key constraints on table "student_assessment"
"""
enum student_assessment_constraint {
  """unique or primary key constraint"""
  student_assessment_pkey
}

"""
input type for incrementing integer column in table "student_assessment"
"""
input student_assessment_inc_input {
  id: Int
  student_id: Int
  weekly_goal: Int
}

"""
input type for inserting data into table "student_assessment"
"""
input student_assessment_insert_input {
  id: Int
  student: student_obj_rel_insert_input
  student_id: Int
  weekly_goal: Int
}

"""
columns and relationships of "student_assessment_interest"
"""
type student_assessment_interest {
  """An object relationship"""
  category: category!
  category_id: Int!
  id: Int!

  """An object relationship"""
  student: student!
  student_id: Int!
}

"""
aggregated selection of "student_assessment_interest"
"""
type student_assessment_interest_aggregate {
  aggregate: student_assessment_interest_aggregate_fields
  nodes: [student_assessment_interest!]!
}

"""
aggregate fields of "student_assessment_interest"
"""
type student_assessment_interest_aggregate_fields {
  avg: student_assessment_interest_avg_fields
  count(columns: [student_assessment_interest_select_column!], distinct: Boolean): Int
  max: student_assessment_interest_max_fields
  min: student_assessment_interest_min_fields
  stddev: student_assessment_interest_stddev_fields
  stddev_pop: student_assessment_interest_stddev_pop_fields
  stddev_samp: student_assessment_interest_stddev_samp_fields
  sum: student_assessment_interest_sum_fields
  var_pop: student_assessment_interest_var_pop_fields
  var_samp: student_assessment_interest_var_samp_fields
  variance: student_assessment_interest_variance_fields
}

"""
order by aggregate values of table "student_assessment_interest"
"""
input student_assessment_interest_aggregate_order_by {
  avg: student_assessment_interest_avg_order_by
  count: order_by
  max: student_assessment_interest_max_order_by
  min: student_assessment_interest_min_order_by
  stddev: student_assessment_interest_stddev_order_by
  stddev_pop: student_assessment_interest_stddev_pop_order_by
  stddev_samp: student_assessment_interest_stddev_samp_order_by
  sum: student_assessment_interest_sum_order_by
  var_pop: student_assessment_interest_var_pop_order_by
  var_samp: student_assessment_interest_var_samp_order_by
  variance: student_assessment_interest_variance_order_by
}

"""
input type for inserting array relation for remote table "student_assessment_interest"
"""
input student_assessment_interest_arr_rel_insert_input {
  data: [student_assessment_interest_insert_input!]!
  on_conflict: student_assessment_interest_on_conflict
}

"""aggregate avg on columns"""
type student_assessment_interest_avg_fields {
  category_id: Float
  id: Float
  student_id: Float
}

"""
order by avg() on columns of table "student_assessment_interest"
"""
input student_assessment_interest_avg_order_by {
  category_id: order_by
  id: order_by
  student_id: order_by
}

"""
Boolean expression to filter rows from the table "student_assessment_interest".
All fields are combined with a logical 'AND'.
"""
input student_assessment_interest_bool_exp {
  _and: [student_assessment_interest_bool_exp]
  _not: student_assessment_interest_bool_exp
  _or: [student_assessment_interest_bool_exp]
  category: category_bool_exp
  category_id: Int_comparison_exp
  id: Int_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "student_assessment_interest"
"""
enum student_assessment_interest_constraint {
  """unique or primary key constraint"""
  student_assessment_interest_pkey
}

"""
input type for incrementing integer column in table "student_assessment_interest"
"""
input student_assessment_interest_inc_input {
  category_id: Int
  id: Int
  student_id: Int
}

"""
input type for inserting data into table "student_assessment_interest"
"""
input student_assessment_interest_insert_input {
  category: category_obj_rel_insert_input
  category_id: Int
  id: Int
  student: student_obj_rel_insert_input
  student_id: Int
}

"""aggregate max on columns"""
type student_assessment_interest_max_fields {
  category_id: Int
  id: Int
  student_id: Int
}

"""
order by max() on columns of table "student_assessment_interest"
"""
input student_assessment_interest_max_order_by {
  category_id: order_by
  id: order_by
  student_id: order_by
}

"""aggregate min on columns"""
type student_assessment_interest_min_fields {
  category_id: Int
  id: Int
  student_id: Int
}

"""
order by min() on columns of table "student_assessment_interest"
"""
input student_assessment_interest_min_order_by {
  category_id: order_by
  id: order_by
  student_id: order_by
}

"""
response of any mutation on the table "student_assessment_interest"
"""
type student_assessment_interest_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_assessment_interest!]!
}

"""
input type for inserting object relation for remote table "student_assessment_interest"
"""
input student_assessment_interest_obj_rel_insert_input {
  data: student_assessment_interest_insert_input!
  on_conflict: student_assessment_interest_on_conflict
}

"""
on conflict condition type for table "student_assessment_interest"
"""
input student_assessment_interest_on_conflict {
  constraint: student_assessment_interest_constraint!
  update_columns: [student_assessment_interest_update_column!]!
  where: student_assessment_interest_bool_exp
}

"""
ordering options when selecting data from "student_assessment_interest"
"""
input student_assessment_interest_order_by {
  category: category_order_by
  category_id: order_by
  id: order_by
  student: student_order_by
  student_id: order_by
}

"""
primary key columns input for table: "student_assessment_interest"
"""
input student_assessment_interest_pk_columns_input {
  id: Int!
}

"""
select columns of table "student_assessment_interest"
"""
enum student_assessment_interest_select_column {
  """column name"""
  category_id

  """column name"""
  id

  """column name"""
  student_id
}

"""
input type for updating data in table "student_assessment_interest"
"""
input student_assessment_interest_set_input {
  category_id: Int
  id: Int
  student_id: Int
}

"""aggregate stddev on columns"""
type student_assessment_interest_stddev_fields {
  category_id: Float
  id: Float
  student_id: Float
}

"""
order by stddev() on columns of table "student_assessment_interest"
"""
input student_assessment_interest_stddev_order_by {
  category_id: order_by
  id: order_by
  student_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_assessment_interest_stddev_pop_fields {
  category_id: Float
  id: Float
  student_id: Float
}

"""
order by stddev_pop() on columns of table "student_assessment_interest"
"""
input student_assessment_interest_stddev_pop_order_by {
  category_id: order_by
  id: order_by
  student_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_assessment_interest_stddev_samp_fields {
  category_id: Float
  id: Float
  student_id: Float
}

"""
order by stddev_samp() on columns of table "student_assessment_interest"
"""
input student_assessment_interest_stddev_samp_order_by {
  category_id: order_by
  id: order_by
  student_id: order_by
}

"""aggregate sum on columns"""
type student_assessment_interest_sum_fields {
  category_id: Int
  id: Int
  student_id: Int
}

"""
order by sum() on columns of table "student_assessment_interest"
"""
input student_assessment_interest_sum_order_by {
  category_id: order_by
  id: order_by
  student_id: order_by
}

"""
update columns of table "student_assessment_interest"
"""
enum student_assessment_interest_update_column {
  """column name"""
  category_id

  """column name"""
  id

  """column name"""
  student_id
}

"""aggregate var_pop on columns"""
type student_assessment_interest_var_pop_fields {
  category_id: Float
  id: Float
  student_id: Float
}

"""
order by var_pop() on columns of table "student_assessment_interest"
"""
input student_assessment_interest_var_pop_order_by {
  category_id: order_by
  id: order_by
  student_id: order_by
}

"""aggregate var_samp on columns"""
type student_assessment_interest_var_samp_fields {
  category_id: Float
  id: Float
  student_id: Float
}

"""
order by var_samp() on columns of table "student_assessment_interest"
"""
input student_assessment_interest_var_samp_order_by {
  category_id: order_by
  id: order_by
  student_id: order_by
}

"""aggregate variance on columns"""
type student_assessment_interest_variance_fields {
  category_id: Float
  id: Float
  student_id: Float
}

"""
order by variance() on columns of table "student_assessment_interest"
"""
input student_assessment_interest_variance_order_by {
  category_id: order_by
  id: order_by
  student_id: order_by
}

"""aggregate max on columns"""
type student_assessment_max_fields {
  id: Int
  student_id: Int
  weekly_goal: Int
}

"""
order by max() on columns of table "student_assessment"
"""
input student_assessment_max_order_by {
  id: order_by
  student_id: order_by
  weekly_goal: order_by
}

"""aggregate min on columns"""
type student_assessment_min_fields {
  id: Int
  student_id: Int
  weekly_goal: Int
}

"""
order by min() on columns of table "student_assessment"
"""
input student_assessment_min_order_by {
  id: order_by
  student_id: order_by
  weekly_goal: order_by
}

"""
response of any mutation on the table "student_assessment"
"""
type student_assessment_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_assessment!]!
}

"""
input type for inserting object relation for remote table "student_assessment"
"""
input student_assessment_obj_rel_insert_input {
  data: student_assessment_insert_input!
  on_conflict: student_assessment_on_conflict
}

"""
on conflict condition type for table "student_assessment"
"""
input student_assessment_on_conflict {
  constraint: student_assessment_constraint!
  update_columns: [student_assessment_update_column!]!
  where: student_assessment_bool_exp
}

"""
ordering options when selecting data from "student_assessment"
"""
input student_assessment_order_by {
  id: order_by
  student: student_order_by
  student_id: order_by
  weekly_goal: order_by
}

"""
primary key columns input for table: "student_assessment"
"""
input student_assessment_pk_columns_input {
  id: Int!
}

"""
select columns of table "student_assessment"
"""
enum student_assessment_select_column {
  """column name"""
  id

  """column name"""
  student_id

  """column name"""
  weekly_goal
}

"""
input type for updating data in table "student_assessment"
"""
input student_assessment_set_input {
  id: Int
  student_id: Int
  weekly_goal: Int
}

"""aggregate stddev on columns"""
type student_assessment_stddev_fields {
  id: Float
  student_id: Float
  weekly_goal: Float
}

"""
order by stddev() on columns of table "student_assessment"
"""
input student_assessment_stddev_order_by {
  id: order_by
  student_id: order_by
  weekly_goal: order_by
}

"""aggregate stddev_pop on columns"""
type student_assessment_stddev_pop_fields {
  id: Float
  student_id: Float
  weekly_goal: Float
}

"""
order by stddev_pop() on columns of table "student_assessment"
"""
input student_assessment_stddev_pop_order_by {
  id: order_by
  student_id: order_by
  weekly_goal: order_by
}

"""aggregate stddev_samp on columns"""
type student_assessment_stddev_samp_fields {
  id: Float
  student_id: Float
  weekly_goal: Float
}

"""
order by stddev_samp() on columns of table "student_assessment"
"""
input student_assessment_stddev_samp_order_by {
  id: order_by
  student_id: order_by
  weekly_goal: order_by
}

"""aggregate sum on columns"""
type student_assessment_sum_fields {
  id: Int
  student_id: Int
  weekly_goal: Int
}

"""
order by sum() on columns of table "student_assessment"
"""
input student_assessment_sum_order_by {
  id: order_by
  student_id: order_by
  weekly_goal: order_by
}

"""
update columns of table "student_assessment"
"""
enum student_assessment_update_column {
  """column name"""
  id

  """column name"""
  student_id

  """column name"""
  weekly_goal
}

"""aggregate var_pop on columns"""
type student_assessment_var_pop_fields {
  id: Float
  student_id: Float
  weekly_goal: Float
}

"""
order by var_pop() on columns of table "student_assessment"
"""
input student_assessment_var_pop_order_by {
  id: order_by
  student_id: order_by
  weekly_goal: order_by
}

"""aggregate var_samp on columns"""
type student_assessment_var_samp_fields {
  id: Float
  student_id: Float
  weekly_goal: Float
}

"""
order by var_samp() on columns of table "student_assessment"
"""
input student_assessment_var_samp_order_by {
  id: order_by
  student_id: order_by
  weekly_goal: order_by
}

"""aggregate variance on columns"""
type student_assessment_variance_fields {
  id: Float
  student_id: Float
  weekly_goal: Float
}

"""
order by variance() on columns of table "student_assessment"
"""
input student_assessment_variance_order_by {
  id: order_by
  student_id: order_by
  weekly_goal: order_by
}

"""aggregate avg on columns"""
type student_avg_fields {
  _id: Float
  class: Float
  company_id: Float
  telephone: Float
}

"""
order by avg() on columns of table "student"
"""
input student_avg_order_by {
  _id: order_by
  class: order_by
  company_id: order_by
  telephone: order_by
}

"""
Boolean expression to filter rows from the table "student". All fields are combined with a logical 'AND'.
"""
input student_bool_exp {
  _and: [student_bool_exp]
  _id: Int_comparison_exp
  _not: student_bool_exp
  _or: [student_bool_exp]
  category: String_comparison_exp
  class: Int_comparison_exp
  classByClass: class_bool_exp
  company: company_bool_exp
  company_id: Int_comparison_exp
  cpf: String_comparison_exp
  date_of_birth: date_comparison_exp
  department: String_comparison_exp
  email: String_comparison_exp
  firebase_id: String_comparison_exp
  hash_code: String_comparison_exp
  last_name: String_comparison_exp
  name: String_comparison_exp
  office: String_comparison_exp
  schooling: String_comparison_exp
  student_assessment_interests: student_assessment_interest_bool_exp
  student_assessments: student_assessment_bool_exp
  student_material_favorites: student_material_favorite_bool_exp
  student_material_histories: student_material_history_bool_exp
  sub_category: String_comparison_exp
  telephone: numeric_comparison_exp
}

"""
unique or primary key constraints on table "student"
"""
enum student_constraint {
  """unique or primary key constraint"""
  student__id_key

  """unique or primary key constraint"""
  student_cpf_key

  """unique or primary key constraint"""
  student_email_key

  """unique or primary key constraint"""
  student_hash_code_key

  """unique or primary key constraint"""
  student_pkey
}

"""
input type for incrementing integer column in table "student"
"""
input student_inc_input {
  _id: Int
  class: Int
  company_id: Int
  telephone: numeric
}

"""
input type for inserting data into table "student"
"""
input student_insert_input {
  _id: Int
  category: String
  class: Int
  classByClass: class_obj_rel_insert_input
  company: company_obj_rel_insert_input
  company_id: Int
  cpf: String
  date_of_birth: date
  department: String
  email: String
  firebase_id: String
  hash_code: String
  last_name: String
  name: String
  office: String
  schooling: String
  student_assessment_interests: student_assessment_interest_arr_rel_insert_input
  student_assessments: student_assessment_arr_rel_insert_input
  student_material_favorites: student_material_favorite_arr_rel_insert_input
  student_material_histories: student_material_history_arr_rel_insert_input
  sub_category: String
  telephone: numeric
}

"""
columns and relationships of "student_material_favorite"
"""
type student_material_favorite {
  _id: Int!

  """An object relationship"""
  material: material!
  material_id: Int!

  """An object relationship"""
  student: student!
  student_id: Int!
}

"""
aggregated selection of "student_material_favorite"
"""
type student_material_favorite_aggregate {
  aggregate: student_material_favorite_aggregate_fields
  nodes: [student_material_favorite!]!
}

"""
aggregate fields of "student_material_favorite"
"""
type student_material_favorite_aggregate_fields {
  avg: student_material_favorite_avg_fields
  count(columns: [student_material_favorite_select_column!], distinct: Boolean): Int
  max: student_material_favorite_max_fields
  min: student_material_favorite_min_fields
  stddev: student_material_favorite_stddev_fields
  stddev_pop: student_material_favorite_stddev_pop_fields
  stddev_samp: student_material_favorite_stddev_samp_fields
  sum: student_material_favorite_sum_fields
  var_pop: student_material_favorite_var_pop_fields
  var_samp: student_material_favorite_var_samp_fields
  variance: student_material_favorite_variance_fields
}

"""
order by aggregate values of table "student_material_favorite"
"""
input student_material_favorite_aggregate_order_by {
  avg: student_material_favorite_avg_order_by
  count: order_by
  max: student_material_favorite_max_order_by
  min: student_material_favorite_min_order_by
  stddev: student_material_favorite_stddev_order_by
  stddev_pop: student_material_favorite_stddev_pop_order_by
  stddev_samp: student_material_favorite_stddev_samp_order_by
  sum: student_material_favorite_sum_order_by
  var_pop: student_material_favorite_var_pop_order_by
  var_samp: student_material_favorite_var_samp_order_by
  variance: student_material_favorite_variance_order_by
}

"""
input type for inserting array relation for remote table "student_material_favorite"
"""
input student_material_favorite_arr_rel_insert_input {
  data: [student_material_favorite_insert_input!]!
  on_conflict: student_material_favorite_on_conflict
}

"""aggregate avg on columns"""
type student_material_favorite_avg_fields {
  _id: Float
  material_id: Float
  student_id: Float
}

"""
order by avg() on columns of table "student_material_favorite"
"""
input student_material_favorite_avg_order_by {
  _id: order_by
  material_id: order_by
  student_id: order_by
}

"""
Boolean expression to filter rows from the table "student_material_favorite". All fields are combined with a logical 'AND'.
"""
input student_material_favorite_bool_exp {
  _and: [student_material_favorite_bool_exp]
  _id: Int_comparison_exp
  _not: student_material_favorite_bool_exp
  _or: [student_material_favorite_bool_exp]
  material: material_bool_exp
  material_id: Int_comparison_exp
  student: student_bool_exp
  student_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "student_material_favorite"
"""
enum student_material_favorite_constraint {
  """unique or primary key constraint"""
  student_material_favorite__id_key

  """unique or primary key constraint"""
  student_material_favorite_pkey
}

"""
input type for incrementing integer column in table "student_material_favorite"
"""
input student_material_favorite_inc_input {
  _id: Int
  material_id: Int
  student_id: Int
}

"""
input type for inserting data into table "student_material_favorite"
"""
input student_material_favorite_insert_input {
  _id: Int
  material: material_obj_rel_insert_input
  material_id: Int
  student: student_obj_rel_insert_input
  student_id: Int
}

"""aggregate max on columns"""
type student_material_favorite_max_fields {
  _id: Int
  material_id: Int
  student_id: Int
}

"""
order by max() on columns of table "student_material_favorite"
"""
input student_material_favorite_max_order_by {
  _id: order_by
  material_id: order_by
  student_id: order_by
}

"""aggregate min on columns"""
type student_material_favorite_min_fields {
  _id: Int
  material_id: Int
  student_id: Int
}

"""
order by min() on columns of table "student_material_favorite"
"""
input student_material_favorite_min_order_by {
  _id: order_by
  material_id: order_by
  student_id: order_by
}

"""
response of any mutation on the table "student_material_favorite"
"""
type student_material_favorite_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_material_favorite!]!
}

"""
input type for inserting object relation for remote table "student_material_favorite"
"""
input student_material_favorite_obj_rel_insert_input {
  data: student_material_favorite_insert_input!
  on_conflict: student_material_favorite_on_conflict
}

"""
on conflict condition type for table "student_material_favorite"
"""
input student_material_favorite_on_conflict {
  constraint: student_material_favorite_constraint!
  update_columns: [student_material_favorite_update_column!]!
  where: student_material_favorite_bool_exp
}

"""
ordering options when selecting data from "student_material_favorite"
"""
input student_material_favorite_order_by {
  _id: order_by
  material: material_order_by
  material_id: order_by
  student: student_order_by
  student_id: order_by
}

"""
primary key columns input for table: "student_material_favorite"
"""
input student_material_favorite_pk_columns_input {
  _id: Int!
}

"""
select columns of table "student_material_favorite"
"""
enum student_material_favorite_select_column {
  """column name"""
  _id

  """column name"""
  material_id

  """column name"""
  student_id
}

"""
input type for updating data in table "student_material_favorite"
"""
input student_material_favorite_set_input {
  _id: Int
  material_id: Int
  student_id: Int
}

"""aggregate stddev on columns"""
type student_material_favorite_stddev_fields {
  _id: Float
  material_id: Float
  student_id: Float
}

"""
order by stddev() on columns of table "student_material_favorite"
"""
input student_material_favorite_stddev_order_by {
  _id: order_by
  material_id: order_by
  student_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_material_favorite_stddev_pop_fields {
  _id: Float
  material_id: Float
  student_id: Float
}

"""
order by stddev_pop() on columns of table "student_material_favorite"
"""
input student_material_favorite_stddev_pop_order_by {
  _id: order_by
  material_id: order_by
  student_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_material_favorite_stddev_samp_fields {
  _id: Float
  material_id: Float
  student_id: Float
}

"""
order by stddev_samp() on columns of table "student_material_favorite"
"""
input student_material_favorite_stddev_samp_order_by {
  _id: order_by
  material_id: order_by
  student_id: order_by
}

"""aggregate sum on columns"""
type student_material_favorite_sum_fields {
  _id: Int
  material_id: Int
  student_id: Int
}

"""
order by sum() on columns of table "student_material_favorite"
"""
input student_material_favorite_sum_order_by {
  _id: order_by
  material_id: order_by
  student_id: order_by
}

"""
update columns of table "student_material_favorite"
"""
enum student_material_favorite_update_column {
  """column name"""
  _id

  """column name"""
  material_id

  """column name"""
  student_id
}

"""aggregate var_pop on columns"""
type student_material_favorite_var_pop_fields {
  _id: Float
  material_id: Float
  student_id: Float
}

"""
order by var_pop() on columns of table "student_material_favorite"
"""
input student_material_favorite_var_pop_order_by {
  _id: order_by
  material_id: order_by
  student_id: order_by
}

"""aggregate var_samp on columns"""
type student_material_favorite_var_samp_fields {
  _id: Float
  material_id: Float
  student_id: Float
}

"""
order by var_samp() on columns of table "student_material_favorite"
"""
input student_material_favorite_var_samp_order_by {
  _id: order_by
  material_id: order_by
  student_id: order_by
}

"""aggregate variance on columns"""
type student_material_favorite_variance_fields {
  _id: Float
  material_id: Float
  student_id: Float
}

"""
order by variance() on columns of table "student_material_favorite"
"""
input student_material_favorite_variance_order_by {
  _id: order_by
  material_id: order_by
  student_id: order_by
}

"""
columns and relationships of "student_material_history"
"""
type student_material_history {
  _id: Int!
  date: date!

  """An object relationship"""
  material: material
  material_id: Int
  pauses: Int
  progress: Int!
  quiz_score: numeric
  student_id: Int!
}

"""
aggregated selection of "student_material_history"
"""
type student_material_history_aggregate {
  aggregate: student_material_history_aggregate_fields
  nodes: [student_material_history!]!
}

"""
aggregate fields of "student_material_history"
"""
type student_material_history_aggregate_fields {
  avg: student_material_history_avg_fields
  count(columns: [student_material_history_select_column!], distinct: Boolean): Int
  max: student_material_history_max_fields
  min: student_material_history_min_fields
  stddev: student_material_history_stddev_fields
  stddev_pop: student_material_history_stddev_pop_fields
  stddev_samp: student_material_history_stddev_samp_fields
  sum: student_material_history_sum_fields
  var_pop: student_material_history_var_pop_fields
  var_samp: student_material_history_var_samp_fields
  variance: student_material_history_variance_fields
}

"""
order by aggregate values of table "student_material_history"
"""
input student_material_history_aggregate_order_by {
  avg: student_material_history_avg_order_by
  count: order_by
  max: student_material_history_max_order_by
  min: student_material_history_min_order_by
  stddev: student_material_history_stddev_order_by
  stddev_pop: student_material_history_stddev_pop_order_by
  stddev_samp: student_material_history_stddev_samp_order_by
  sum: student_material_history_sum_order_by
  var_pop: student_material_history_var_pop_order_by
  var_samp: student_material_history_var_samp_order_by
  variance: student_material_history_variance_order_by
}

"""
input type for inserting array relation for remote table "student_material_history"
"""
input student_material_history_arr_rel_insert_input {
  data: [student_material_history_insert_input!]!
  on_conflict: student_material_history_on_conflict
}

"""aggregate avg on columns"""
type student_material_history_avg_fields {
  _id: Float
  material_id: Float
  pauses: Float
  progress: Float
  quiz_score: Float
  student_id: Float
}

"""
order by avg() on columns of table "student_material_history"
"""
input student_material_history_avg_order_by {
  _id: order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""
Boolean expression to filter rows from the table "student_material_history". All fields are combined with a logical 'AND'.
"""
input student_material_history_bool_exp {
  _and: [student_material_history_bool_exp]
  _id: Int_comparison_exp
  _not: student_material_history_bool_exp
  _or: [student_material_history_bool_exp]
  date: date_comparison_exp
  material: material_bool_exp
  material_id: Int_comparison_exp
  pauses: Int_comparison_exp
  progress: Int_comparison_exp
  quiz_score: numeric_comparison_exp
  student_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "student_material_history"
"""
enum student_material_history_constraint {
  """unique or primary key constraint"""
  student_material_history_pkey
}

"""
input type for incrementing integer column in table "student_material_history"
"""
input student_material_history_inc_input {
  _id: Int
  material_id: Int
  pauses: Int
  progress: Int
  quiz_score: numeric
  student_id: Int
}

"""
input type for inserting data into table "student_material_history"
"""
input student_material_history_insert_input {
  _id: Int
  date: date
  material: material_obj_rel_insert_input
  material_id: Int
  pauses: Int
  progress: Int
  quiz_score: numeric
  student_id: Int
}

"""aggregate max on columns"""
type student_material_history_max_fields {
  _id: Int
  date: date
  material_id: Int
  pauses: Int
  progress: Int
  quiz_score: numeric
  student_id: Int
}

"""
order by max() on columns of table "student_material_history"
"""
input student_material_history_max_order_by {
  _id: order_by
  date: order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""aggregate min on columns"""
type student_material_history_min_fields {
  _id: Int
  date: date
  material_id: Int
  pauses: Int
  progress: Int
  quiz_score: numeric
  student_id: Int
}

"""
order by min() on columns of table "student_material_history"
"""
input student_material_history_min_order_by {
  _id: order_by
  date: order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""
response of any mutation on the table "student_material_history"
"""
type student_material_history_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_material_history!]!
}

"""
input type for inserting object relation for remote table "student_material_history"
"""
input student_material_history_obj_rel_insert_input {
  data: student_material_history_insert_input!
  on_conflict: student_material_history_on_conflict
}

"""
on conflict condition type for table "student_material_history"
"""
input student_material_history_on_conflict {
  constraint: student_material_history_constraint!
  update_columns: [student_material_history_update_column!]!
  where: student_material_history_bool_exp
}

"""
ordering options when selecting data from "student_material_history"
"""
input student_material_history_order_by {
  _id: order_by
  date: order_by
  material: material_order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""
primary key columns input for table: "student_material_history"
"""
input student_material_history_pk_columns_input {
  _id: Int!
}

"""
select columns of table "student_material_history"
"""
enum student_material_history_select_column {
  """column name"""
  _id

  """column name"""
  date

  """column name"""
  material_id

  """column name"""
  pauses

  """column name"""
  progress

  """column name"""
  quiz_score

  """column name"""
  student_id
}

"""
input type for updating data in table "student_material_history"
"""
input student_material_history_set_input {
  _id: Int
  date: date
  material_id: Int
  pauses: Int
  progress: Int
  quiz_score: numeric
  student_id: Int
}

"""aggregate stddev on columns"""
type student_material_history_stddev_fields {
  _id: Float
  material_id: Float
  pauses: Float
  progress: Float
  quiz_score: Float
  student_id: Float
}

"""
order by stddev() on columns of table "student_material_history"
"""
input student_material_history_stddev_order_by {
  _id: order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_material_history_stddev_pop_fields {
  _id: Float
  material_id: Float
  pauses: Float
  progress: Float
  quiz_score: Float
  student_id: Float
}

"""
order by stddev_pop() on columns of table "student_material_history"
"""
input student_material_history_stddev_pop_order_by {
  _id: order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_material_history_stddev_samp_fields {
  _id: Float
  material_id: Float
  pauses: Float
  progress: Float
  quiz_score: Float
  student_id: Float
}

"""
order by stddev_samp() on columns of table "student_material_history"
"""
input student_material_history_stddev_samp_order_by {
  _id: order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""aggregate sum on columns"""
type student_material_history_sum_fields {
  _id: Int
  material_id: Int
  pauses: Int
  progress: Int
  quiz_score: numeric
  student_id: Int
}

"""
order by sum() on columns of table "student_material_history"
"""
input student_material_history_sum_order_by {
  _id: order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""
update columns of table "student_material_history"
"""
enum student_material_history_update_column {
  """column name"""
  _id

  """column name"""
  date

  """column name"""
  material_id

  """column name"""
  pauses

  """column name"""
  progress

  """column name"""
  quiz_score

  """column name"""
  student_id
}

"""aggregate var_pop on columns"""
type student_material_history_var_pop_fields {
  _id: Float
  material_id: Float
  pauses: Float
  progress: Float
  quiz_score: Float
  student_id: Float
}

"""
order by var_pop() on columns of table "student_material_history"
"""
input student_material_history_var_pop_order_by {
  _id: order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""aggregate var_samp on columns"""
type student_material_history_var_samp_fields {
  _id: Float
  material_id: Float
  pauses: Float
  progress: Float
  quiz_score: Float
  student_id: Float
}

"""
order by var_samp() on columns of table "student_material_history"
"""
input student_material_history_var_samp_order_by {
  _id: order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""aggregate variance on columns"""
type student_material_history_variance_fields {
  _id: Float
  material_id: Float
  pauses: Float
  progress: Float
  quiz_score: Float
  student_id: Float
}

"""
order by variance() on columns of table "student_material_history"
"""
input student_material_history_variance_order_by {
  _id: order_by
  material_id: order_by
  pauses: order_by
  progress: order_by
  quiz_score: order_by
  student_id: order_by
}

"""aggregate max on columns"""
type student_max_fields {
  _id: Int
  category: String
  class: Int
  company_id: Int
  cpf: String
  date_of_birth: date
  department: String
  email: String
  firebase_id: String
  hash_code: String
  last_name: String
  name: String
  office: String
  schooling: String
  sub_category: String
  telephone: numeric
}

"""
order by max() on columns of table "student"
"""
input student_max_order_by {
  _id: order_by
  category: order_by
  class: order_by
  company_id: order_by
  cpf: order_by
  date_of_birth: order_by
  department: order_by
  email: order_by
  firebase_id: order_by
  hash_code: order_by
  last_name: order_by
  name: order_by
  office: order_by
  schooling: order_by
  sub_category: order_by
  telephone: order_by
}

"""aggregate min on columns"""
type student_min_fields {
  _id: Int
  category: String
  class: Int
  company_id: Int
  cpf: String
  date_of_birth: date
  department: String
  email: String
  firebase_id: String
  hash_code: String
  last_name: String
  name: String
  office: String
  schooling: String
  sub_category: String
  telephone: numeric
}

"""
order by min() on columns of table "student"
"""
input student_min_order_by {
  _id: order_by
  category: order_by
  class: order_by
  company_id: order_by
  cpf: order_by
  date_of_birth: order_by
  department: order_by
  email: order_by
  firebase_id: order_by
  hash_code: order_by
  last_name: order_by
  name: order_by
  office: order_by
  schooling: order_by
  sub_category: order_by
  telephone: order_by
}

"""
response of any mutation on the table "student"
"""
type student_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student!]!
}

"""
input type for inserting object relation for remote table "student"
"""
input student_obj_rel_insert_input {
  data: student_insert_input!
  on_conflict: student_on_conflict
}

"""
on conflict condition type for table "student"
"""
input student_on_conflict {
  constraint: student_constraint!
  update_columns: [student_update_column!]!
  where: student_bool_exp
}

"""
ordering options when selecting data from "student"
"""
input student_order_by {
  _id: order_by
  category: order_by
  class: order_by
  classByClass: class_order_by
  company: company_order_by
  company_id: order_by
  cpf: order_by
  date_of_birth: order_by
  department: order_by
  email: order_by
  firebase_id: order_by
  hash_code: order_by
  last_name: order_by
  name: order_by
  office: order_by
  schooling: order_by
  student_assessment_interests_aggregate: student_assessment_interest_aggregate_order_by
  student_assessments_aggregate: student_assessment_aggregate_order_by
  student_material_favorites_aggregate: student_material_favorite_aggregate_order_by
  student_material_histories_aggregate: student_material_history_aggregate_order_by
  sub_category: order_by
  telephone: order_by
}

"""
primary key columns input for table: "student"
"""
input student_pk_columns_input {
  _id: Int!
}

"""
select columns of table "student"
"""
enum student_select_column {
  """column name"""
  _id

  """column name"""
  category

  """column name"""
  class

  """column name"""
  company_id

  """column name"""
  cpf

  """column name"""
  date_of_birth

  """column name"""
  department

  """column name"""
  email

  """column name"""
  firebase_id

  """column name"""
  hash_code

  """column name"""
  last_name

  """column name"""
  name

  """column name"""
  office

  """column name"""
  schooling

  """column name"""
  sub_category

  """column name"""
  telephone
}

"""
input type for updating data in table "student"
"""
input student_set_input {
  _id: Int
  category: String
  class: Int
  company_id: Int
  cpf: String
  date_of_birth: date
  department: String
  email: String
  firebase_id: String
  hash_code: String
  last_name: String
  name: String
  office: String
  schooling: String
  sub_category: String
  telephone: numeric
}

"""aggregate stddev on columns"""
type student_stddev_fields {
  _id: Float
  class: Float
  company_id: Float
  telephone: Float
}

"""
order by stddev() on columns of table "student"
"""
input student_stddev_order_by {
  _id: order_by
  class: order_by
  company_id: order_by
  telephone: order_by
}

"""aggregate stddev_pop on columns"""
type student_stddev_pop_fields {
  _id: Float
  class: Float
  company_id: Float
  telephone: Float
}

"""
order by stddev_pop() on columns of table "student"
"""
input student_stddev_pop_order_by {
  _id: order_by
  class: order_by
  company_id: order_by
  telephone: order_by
}

"""aggregate stddev_samp on columns"""
type student_stddev_samp_fields {
  _id: Float
  class: Float
  company_id: Float
  telephone: Float
}

"""
order by stddev_samp() on columns of table "student"
"""
input student_stddev_samp_order_by {
  _id: order_by
  class: order_by
  company_id: order_by
  telephone: order_by
}

"""aggregate sum on columns"""
type student_sum_fields {
  _id: Int
  class: Int
  company_id: Int
  telephone: numeric
}

"""
order by sum() on columns of table "student"
"""
input student_sum_order_by {
  _id: order_by
  class: order_by
  company_id: order_by
  telephone: order_by
}

"""
update columns of table "student"
"""
enum student_update_column {
  """column name"""
  _id

  """column name"""
  category

  """column name"""
  class

  """column name"""
  company_id

  """column name"""
  cpf

  """column name"""
  date_of_birth

  """column name"""
  department

  """column name"""
  email

  """column name"""
  firebase_id

  """column name"""
  hash_code

  """column name"""
  last_name

  """column name"""
  name

  """column name"""
  office

  """column name"""
  schooling

  """column name"""
  sub_category

  """column name"""
  telephone
}

"""aggregate var_pop on columns"""
type student_var_pop_fields {
  _id: Float
  class: Float
  company_id: Float
  telephone: Float
}

"""
order by var_pop() on columns of table "student"
"""
input student_var_pop_order_by {
  _id: order_by
  class: order_by
  company_id: order_by
  telephone: order_by
}

"""aggregate var_samp on columns"""
type student_var_samp_fields {
  _id: Float
  class: Float
  company_id: Float
  telephone: Float
}

"""
order by var_samp() on columns of table "student"
"""
input student_var_samp_order_by {
  _id: order_by
  class: order_by
  company_id: order_by
  telephone: order_by
}

"""aggregate variance on columns"""
type student_variance_fields {
  _id: Float
  class: Float
  company_id: Float
  telephone: Float
}

"""
order by variance() on columns of table "student"
"""
input student_variance_order_by {
  _id: order_by
  class: order_by
  company_id: order_by
  telephone: order_by
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "category"
  """
  category(
    """distinct select on columns"""
    distinct_on: [category_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [category_order_by!]

    """filter the rows returned"""
    where: category_bool_exp
  ): [category!]!

  """
  fetch aggregated fields from the table: "category"
  """
  category_aggregate(
    """distinct select on columns"""
    distinct_on: [category_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [category_order_by!]

    """filter the rows returned"""
    where: category_bool_exp
  ): category_aggregate!

  """fetch data from the table: "category" using primary key columns"""
  category_by_pk(_id: Int!): category

  """
  fetch data from the table: "class"
  """
  class(
    """distinct select on columns"""
    distinct_on: [class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_order_by!]

    """filter the rows returned"""
    where: class_bool_exp
  ): [class!]!

  """
  fetch aggregated fields from the table: "class"
  """
  class_aggregate(
    """distinct select on columns"""
    distinct_on: [class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_order_by!]

    """filter the rows returned"""
    where: class_bool_exp
  ): class_aggregate!

  """fetch data from the table: "class" using primary key columns"""
  class_by_pk(_id: Int!): class

  """
  fetch data from the table: "company"
  """
  company(
    """distinct select on columns"""
    distinct_on: [company_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [company_order_by!]

    """filter the rows returned"""
    where: company_bool_exp
  ): [company!]!

  """
  fetch aggregated fields from the table: "company"
  """
  company_aggregate(
    """distinct select on columns"""
    distinct_on: [company_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [company_order_by!]

    """filter the rows returned"""
    where: company_bool_exp
  ): company_aggregate!

  """fetch data from the table: "company" using primary key columns"""
  company_by_pk(_id: Int!): company

  """
  fetch data from the table: "interest"
  """
  interest(
    """distinct select on columns"""
    distinct_on: [interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [interest_order_by!]

    """filter the rows returned"""
    where: interest_bool_exp
  ): [interest!]!

  """
  fetch aggregated fields from the table: "interest"
  """
  interest_aggregate(
    """distinct select on columns"""
    distinct_on: [interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [interest_order_by!]

    """filter the rows returned"""
    where: interest_bool_exp
  ): interest_aggregate!

  """fetch data from the table: "interest" using primary key columns"""
  interest_by_pk(id: Int!): interest

  """
  fetch data from the table: "learning_unit"
  """
  learning_unit(
    """distinct select on columns"""
    distinct_on: [learning_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unit_order_by!]

    """filter the rows returned"""
    where: learning_unit_bool_exp
  ): [learning_unit!]!

  """
  fetch aggregated fields from the table: "learning_unit"
  """
  learning_unit_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_unit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unit_order_by!]

    """filter the rows returned"""
    where: learning_unit_bool_exp
  ): learning_unit_aggregate!

  """fetch data from the table: "learning_unit" using primary key columns"""
  learning_unit_by_pk(_id: Int!): learning_unit

  """
  fetch data from the table: "learning_unity_release"
  """
  learning_unity_release(
    """distinct select on columns"""
    distinct_on: [learning_unity_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unity_release_order_by!]

    """filter the rows returned"""
    where: learning_unity_release_bool_exp
  ): [learning_unity_release!]!

  """
  fetch aggregated fields from the table: "learning_unity_release"
  """
  learning_unity_release_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_unity_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_unity_release_order_by!]

    """filter the rows returned"""
    where: learning_unity_release_bool_exp
  ): learning_unity_release_aggregate!

  """
  fetch data from the table: "learning_unity_release" using primary key columns
  """
  learning_unity_release_by_pk(_id: Int!): learning_unity_release

  """
  fetch data from the table: "material"
  """
  material(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): [material!]!

  """
  fetch aggregated fields from the table: "material"
  """
  material_aggregate(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): material_aggregate!

  """fetch data from the table: "material" using primary key columns"""
  material_by_pk(_id: Int!): material

  """
  fetch data from the table: "material_type"
  """
  material_type(
    """distinct select on columns"""
    distinct_on: [material_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_type_order_by!]

    """filter the rows returned"""
    where: material_type_bool_exp
  ): [material_type!]!

  """
  fetch aggregated fields from the table: "material_type"
  """
  material_type_aggregate(
    """distinct select on columns"""
    distinct_on: [material_type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_type_order_by!]

    """filter the rows returned"""
    where: material_type_bool_exp
  ): material_type_aggregate!

  """fetch data from the table: "material_type" using primary key columns"""
  material_type_by_pk(_id: Int!): material_type

  """
  fetch data from the table: "mentorship"
  """
  mentorship(
    """distinct select on columns"""
    distinct_on: [mentorship_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mentorship_order_by!]

    """filter the rows returned"""
    where: mentorship_bool_exp
  ): [mentorship!]!

  """
  fetch aggregated fields from the table: "mentorship"
  """
  mentorship_aggregate(
    """distinct select on columns"""
    distinct_on: [mentorship_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mentorship_order_by!]

    """filter the rows returned"""
    where: mentorship_bool_exp
  ): mentorship_aggregate!

  """fetch data from the table: "mentorship" using primary key columns"""
  mentorship_by_pk(_id: Int!): mentorship

  """
  fetch data from the table: "module_release"
  """
  module_release(
    """distinct select on columns"""
    distinct_on: [module_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [module_release_order_by!]

    """filter the rows returned"""
    where: module_release_bool_exp
  ): [module_release!]!

  """
  fetch aggregated fields from the table: "module_release"
  """
  module_release_aggregate(
    """distinct select on columns"""
    distinct_on: [module_release_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [module_release_order_by!]

    """filter the rows returned"""
    where: module_release_bool_exp
  ): module_release_aggregate!

  """fetch data from the table: "module_release" using primary key columns"""
  module_release_by_pk(id: Int!): module_release

  """
  fetch data from the table: "modules"
  """
  modules(
    """distinct select on columns"""
    distinct_on: [modules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [modules_order_by!]

    """filter the rows returned"""
    where: modules_bool_exp
  ): [modules!]!

  """
  fetch aggregated fields from the table: "modules"
  """
  modules_aggregate(
    """distinct select on columns"""
    distinct_on: [modules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [modules_order_by!]

    """filter the rows returned"""
    where: modules_bool_exp
  ): modules_aggregate!

  """fetch data from the table: "modules" using primary key columns"""
  modules_by_pk(_id: Int!): modules

  """
  fetch data from the table: "related_material"
  """
  related_material(
    """distinct select on columns"""
    distinct_on: [related_material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [related_material_order_by!]

    """filter the rows returned"""
    where: related_material_bool_exp
  ): [related_material!]!

  """
  fetch aggregated fields from the table: "related_material"
  """
  related_material_aggregate(
    """distinct select on columns"""
    distinct_on: [related_material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [related_material_order_by!]

    """filter the rows returned"""
    where: related_material_bool_exp
  ): related_material_aggregate!

  """
  fetch data from the table: "related_material" using primary key columns
  """
  related_material_by_pk(material_id: Int!, related_material_id: Int!): related_material

  """
  fetch data from the table: "student"
  """
  student(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): [student!]!

  """
  fetch aggregated fields from the table: "student"
  """
  student_aggregate(
    """distinct select on columns"""
    distinct_on: [student_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_order_by!]

    """filter the rows returned"""
    where: student_bool_exp
  ): student_aggregate!

  """
  fetch data from the table: "student_assessment"
  """
  student_assessment(
    """distinct select on columns"""
    distinct_on: [student_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_order_by!]

    """filter the rows returned"""
    where: student_assessment_bool_exp
  ): [student_assessment!]!

  """
  fetch aggregated fields from the table: "student_assessment"
  """
  student_assessment_aggregate(
    """distinct select on columns"""
    distinct_on: [student_assessment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_order_by!]

    """filter the rows returned"""
    where: student_assessment_bool_exp
  ): student_assessment_aggregate!

  """
  fetch data from the table: "student_assessment" using primary key columns
  """
  student_assessment_by_pk(id: Int!): student_assessment

  """
  fetch data from the table: "student_assessment_interest"
  """
  student_assessment_interest(
    """distinct select on columns"""
    distinct_on: [student_assessment_interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_interest_order_by!]

    """filter the rows returned"""
    where: student_assessment_interest_bool_exp
  ): [student_assessment_interest!]!

  """
  fetch aggregated fields from the table: "student_assessment_interest"
  """
  student_assessment_interest_aggregate(
    """distinct select on columns"""
    distinct_on: [student_assessment_interest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_assessment_interest_order_by!]

    """filter the rows returned"""
    where: student_assessment_interest_bool_exp
  ): student_assessment_interest_aggregate!

  """
  fetch data from the table: "student_assessment_interest" using primary key columns
  """
  student_assessment_interest_by_pk(id: Int!): student_assessment_interest

  """fetch data from the table: "student" using primary key columns"""
  student_by_pk(_id: Int!): student

  """
  fetch data from the table: "student_material_favorite"
  """
  student_material_favorite(
    """distinct select on columns"""
    distinct_on: [student_material_favorite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_favorite_order_by!]

    """filter the rows returned"""
    where: student_material_favorite_bool_exp
  ): [student_material_favorite!]!

  """
  fetch aggregated fields from the table: "student_material_favorite"
  """
  student_material_favorite_aggregate(
    """distinct select on columns"""
    distinct_on: [student_material_favorite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_favorite_order_by!]

    """filter the rows returned"""
    where: student_material_favorite_bool_exp
  ): student_material_favorite_aggregate!

  """
  fetch data from the table: "student_material_favorite" using primary key columns
  """
  student_material_favorite_by_pk(_id: Int!): student_material_favorite

  """
  fetch data from the table: "student_material_history"
  """
  student_material_history(
    """distinct select on columns"""
    distinct_on: [student_material_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_history_order_by!]

    """filter the rows returned"""
    where: student_material_history_bool_exp
  ): [student_material_history!]!

  """
  fetch aggregated fields from the table: "student_material_history"
  """
  student_material_history_aggregate(
    """distinct select on columns"""
    distinct_on: [student_material_history_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_material_history_order_by!]

    """filter the rows returned"""
    where: student_material_history_bool_exp
  ): student_material_history_aggregate!

  """
  fetch data from the table: "student_material_history" using primary key columns
  """
  student_material_history_by_pk(_id: Int!): student_material_history

  """
  fetch data from the table: "tag"
  """
  tag(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """
  fetch aggregated fields from the table: "tag"
  """
  tag_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """fetch data from the table: "tag" using primary key columns"""
  tag_by_pk(_id: Int!): tag

  """
  fetch data from the table: "tags"
  """
  tags(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """
  fetch aggregated fields from the table: "tags"
  """
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): tags_aggregate!

  """fetch data from the table: "tags" using primary key columns"""
  tags_by_pk(id: Int!): tags
}

"""
columns and relationships of "tag"
"""
type tag {
  _id: Int!
  name: String!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """An aggregated array relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): tags_aggregate!
}

"""
aggregated selection of "tag"
"""
type tag_aggregate {
  aggregate: tag_aggregate_fields
  nodes: [tag!]!
}

"""
aggregate fields of "tag"
"""
type tag_aggregate_fields {
  avg: tag_avg_fields
  count(columns: [tag_select_column!], distinct: Boolean): Int
  max: tag_max_fields
  min: tag_min_fields
  stddev: tag_stddev_fields
  stddev_pop: tag_stddev_pop_fields
  stddev_samp: tag_stddev_samp_fields
  sum: tag_sum_fields
  var_pop: tag_var_pop_fields
  var_samp: tag_var_samp_fields
  variance: tag_variance_fields
}

"""
order by aggregate values of table "tag"
"""
input tag_aggregate_order_by {
  avg: tag_avg_order_by
  count: order_by
  max: tag_max_order_by
  min: tag_min_order_by
  stddev: tag_stddev_order_by
  stddev_pop: tag_stddev_pop_order_by
  stddev_samp: tag_stddev_samp_order_by
  sum: tag_sum_order_by
  var_pop: tag_var_pop_order_by
  var_samp: tag_var_samp_order_by
  variance: tag_variance_order_by
}

"""
input type for inserting array relation for remote table "tag"
"""
input tag_arr_rel_insert_input {
  data: [tag_insert_input!]!
  on_conflict: tag_on_conflict
}

"""aggregate avg on columns"""
type tag_avg_fields {
  _id: Float
}

"""
order by avg() on columns of table "tag"
"""
input tag_avg_order_by {
  _id: order_by
}

"""
Boolean expression to filter rows from the table "tag". All fields are combined with a logical 'AND'.
"""
input tag_bool_exp {
  _and: [tag_bool_exp]
  _id: Int_comparison_exp
  _not: tag_bool_exp
  _or: [tag_bool_exp]
  name: String_comparison_exp
  tags: tags_bool_exp
}

"""
unique or primary key constraints on table "tag"
"""
enum tag_constraint {
  """unique or primary key constraint"""
  tag_pkey
}

"""
input type for incrementing integer column in table "tag"
"""
input tag_inc_input {
  _id: Int
}

"""
input type for inserting data into table "tag"
"""
input tag_insert_input {
  _id: Int
  name: String
  tags: tags_arr_rel_insert_input
}

"""aggregate max on columns"""
type tag_max_fields {
  _id: Int
  name: String
}

"""
order by max() on columns of table "tag"
"""
input tag_max_order_by {
  _id: order_by
  name: order_by
}

"""aggregate min on columns"""
type tag_min_fields {
  _id: Int
  name: String
}

"""
order by min() on columns of table "tag"
"""
input tag_min_order_by {
  _id: order_by
  name: order_by
}

"""
response of any mutation on the table "tag"
"""
type tag_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [tag!]!
}

"""
input type for inserting object relation for remote table "tag"
"""
input tag_obj_rel_insert_input {
  data: tag_insert_input!
  on_conflict: tag_on_conflict
}

"""
on conflict condition type for table "tag"
"""
input tag_on_conflict {
  constraint: tag_constraint!
  update_columns: [tag_update_column!]!
  where: tag_bool_exp
}

"""
ordering options when selecting data from "tag"
"""
input tag_order_by {
  _id: order_by
  name: order_by
  tags_aggregate: tags_aggregate_order_by
}

"""
primary key columns input for table: "tag"
"""
input tag_pk_columns_input {
  _id: Int!
}

"""
select columns of table "tag"
"""
enum tag_select_column {
  """column name"""
  _id

  """column name"""
  name
}

"""
input type for updating data in table "tag"
"""
input tag_set_input {
  _id: Int
  name: String
}

"""aggregate stddev on columns"""
type tag_stddev_fields {
  _id: Float
}

"""
order by stddev() on columns of table "tag"
"""
input tag_stddev_order_by {
  _id: order_by
}

"""aggregate stddev_pop on columns"""
type tag_stddev_pop_fields {
  _id: Float
}

"""
order by stddev_pop() on columns of table "tag"
"""
input tag_stddev_pop_order_by {
  _id: order_by
}

"""aggregate stddev_samp on columns"""
type tag_stddev_samp_fields {
  _id: Float
}

"""
order by stddev_samp() on columns of table "tag"
"""
input tag_stddev_samp_order_by {
  _id: order_by
}

"""aggregate sum on columns"""
type tag_sum_fields {
  _id: Int
}

"""
order by sum() on columns of table "tag"
"""
input tag_sum_order_by {
  _id: order_by
}

"""
update columns of table "tag"
"""
enum tag_update_column {
  """column name"""
  _id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type tag_var_pop_fields {
  _id: Float
}

"""
order by var_pop() on columns of table "tag"
"""
input tag_var_pop_order_by {
  _id: order_by
}

"""aggregate var_samp on columns"""
type tag_var_samp_fields {
  _id: Float
}

"""
order by var_samp() on columns of table "tag"
"""
input tag_var_samp_order_by {
  _id: order_by
}

"""aggregate variance on columns"""
type tag_variance_fields {
  _id: Float
}

"""
order by variance() on columns of table "tag"
"""
input tag_variance_order_by {
  _id: order_by
}

"""
columns and relationships of "tags"
"""
type tags {
  id: Int!

  """An object relationship"""
  material: material!
  material_id: Int!

  """An object relationship"""
  tag: tag!
  tag_id: Int!
}

"""
aggregated selection of "tags"
"""
type tags_aggregate {
  aggregate: tags_aggregate_fields
  nodes: [tags!]!
}

"""
aggregate fields of "tags"
"""
type tags_aggregate_fields {
  avg: tags_avg_fields
  count(columns: [tags_select_column!], distinct: Boolean): Int
  max: tags_max_fields
  min: tags_min_fields
  stddev: tags_stddev_fields
  stddev_pop: tags_stddev_pop_fields
  stddev_samp: tags_stddev_samp_fields
  sum: tags_sum_fields
  var_pop: tags_var_pop_fields
  var_samp: tags_var_samp_fields
  variance: tags_variance_fields
}

"""
order by aggregate values of table "tags"
"""
input tags_aggregate_order_by {
  avg: tags_avg_order_by
  count: order_by
  max: tags_max_order_by
  min: tags_min_order_by
  stddev: tags_stddev_order_by
  stddev_pop: tags_stddev_pop_order_by
  stddev_samp: tags_stddev_samp_order_by
  sum: tags_sum_order_by
  var_pop: tags_var_pop_order_by
  var_samp: tags_var_samp_order_by
  variance: tags_variance_order_by
}

"""
input type for inserting array relation for remote table "tags"
"""
input tags_arr_rel_insert_input {
  data: [tags_insert_input!]!
  on_conflict: tags_on_conflict
}

"""aggregate avg on columns"""
type tags_avg_fields {
  id: Float
  material_id: Float
  tag_id: Float
}

"""
order by avg() on columns of table "tags"
"""
input tags_avg_order_by {
  id: order_by
  material_id: order_by
  tag_id: order_by
}

"""
Boolean expression to filter rows from the table "tags". All fields are combined with a logical 'AND'.
"""
input tags_bool_exp {
  _and: [tags_bool_exp]
  _not: tags_bool_exp
  _or: [tags_bool_exp]
  id: Int_comparison_exp
  material: material_bool_exp
  material_id: Int_comparison_exp
  tag: tag_bool_exp
  tag_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "tags"
"""
enum tags_constraint {
  """unique or primary key constraint"""
  tags_pkey
}

"""
input type for incrementing integer column in table "tags"
"""
input tags_inc_input {
  id: Int
  material_id: Int
  tag_id: Int
}

"""
input type for inserting data into table "tags"
"""
input tags_insert_input {
  id: Int
  material: material_obj_rel_insert_input
  material_id: Int
  tag: tag_obj_rel_insert_input
  tag_id: Int
}

"""aggregate max on columns"""
type tags_max_fields {
  id: Int
  material_id: Int
  tag_id: Int
}

"""
order by max() on columns of table "tags"
"""
input tags_max_order_by {
  id: order_by
  material_id: order_by
  tag_id: order_by
}

"""aggregate min on columns"""
type tags_min_fields {
  id: Int
  material_id: Int
  tag_id: Int
}

"""
order by min() on columns of table "tags"
"""
input tags_min_order_by {
  id: order_by
  material_id: order_by
  tag_id: order_by
}

"""
response of any mutation on the table "tags"
"""
type tags_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [tags!]!
}

"""
input type for inserting object relation for remote table "tags"
"""
input tags_obj_rel_insert_input {
  data: tags_insert_input!
  on_conflict: tags_on_conflict
}

"""
on conflict condition type for table "tags"
"""
input tags_on_conflict {
  constraint: tags_constraint!
  update_columns: [tags_update_column!]!
  where: tags_bool_exp
}

"""
ordering options when selecting data from "tags"
"""
input tags_order_by {
  id: order_by
  material: material_order_by
  material_id: order_by
  tag: tag_order_by
  tag_id: order_by
}

"""
primary key columns input for table: "tags"
"""
input tags_pk_columns_input {
  id: Int!
}

"""
select columns of table "tags"
"""
enum tags_select_column {
  """column name"""
  id

  """column name"""
  material_id

  """column name"""
  tag_id
}

"""
input type for updating data in table "tags"
"""
input tags_set_input {
  id: Int
  material_id: Int
  tag_id: Int
}

"""aggregate stddev on columns"""
type tags_stddev_fields {
  id: Float
  material_id: Float
  tag_id: Float
}

"""
order by stddev() on columns of table "tags"
"""
input tags_stddev_order_by {
  id: order_by
  material_id: order_by
  tag_id: order_by
}

"""aggregate stddev_pop on columns"""
type tags_stddev_pop_fields {
  id: Float
  material_id: Float
  tag_id: Float
}

"""
order by stddev_pop() on columns of table "tags"
"""
input tags_stddev_pop_order_by {
  id: order_by
  material_id: order_by
  tag_id: order_by
}

"""aggregate stddev_samp on columns"""
type tags_stddev_samp_fields {
  id: Float
  material_id: Float
  tag_id: Float
}

"""
order by stddev_samp() on columns of table "tags"
"""
input tags_stddev_samp_order_by {
  id: order_by
  material_id: order_by
  tag_id: order_by
}

"""aggregate sum on columns"""
type tags_sum_fields {
  id: Int
  material_id: Int
  tag_id: Int
}

"""
order by sum() on columns of table "tags"
"""
input tags_sum_order_by {
  id: order_by
  material_id: order_by
  tag_id: order_by
}

"""
update columns of table "tags"
"""
enum tags_update_column {
  """column name"""
  id

  """column name"""
  material_id

  """column name"""
  tag_id
}

"""aggregate var_pop on columns"""
type tags_var_pop_fields {
  id: Float
  material_id: Float
  tag_id: Float
}

"""
order by var_pop() on columns of table "tags"
"""
input tags_var_pop_order_by {
  id: order_by
  material_id: order_by
  tag_id: order_by
}

"""aggregate var_samp on columns"""
type tags_var_samp_fields {
  id: Float
  material_id: Float
  tag_id: Float
}

"""
order by var_samp() on columns of table "tags"
"""
input tags_var_samp_order_by {
  id: order_by
  material_id: order_by
  tag_id: order_by
}

"""aggregate variance on columns"""
type tags_variance_fields {
  id: Float
  material_id: Float
  tag_id: Float
}

"""
order by variance() on columns of table "tags"
"""
input tags_variance_order_by {
  id: order_by
  material_id: order_by
  tag_id: order_by
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

